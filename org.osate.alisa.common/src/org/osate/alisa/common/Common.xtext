grammar org.osate.alisa.common.Common with org.eclipse.xtext.xbase.Xbase
//org.eclipse.xtext.common.Terminals

generate common "http://www.osate.org/alisa/common/Common"
//import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://aadl.info/AADL/2.0" as aadl2
import "http://www.eclipse.org/xtext/xbase/Xbase" as xbase
import  "http://www.osate.org/organization/Organization" as org


	
Description : 
	'description' description += DescriptionElement+
;

DescriptionElement :
 	text = STRING | showValue = ShowValue |thisTarget?='this'
 ;

Rationale: 'rationale' text=STRING ('stakeholders' stakeholders+=[org::Stakeholder|QualifiedName])?;


Uncertainty:
	'uncertainty' name=ValidID
	'['
	(
		('volatility' volatility=INT)
		&('costimpact' costimpact=INT)
		&('scheduleimpact' scheduleimpact=INT)
		&('familiarity' familiarity=INT)
		&('timecriticality' timecriticality=INT)
		&('riskindex' riskindex=INT)
		&('maturityindex' maturityindex=INT)
	)
	']'
;

// New rule for val only
XValDeclaration returns xbase::XExpression:
	{xbase::XVariableDeclaration}
	 'val' (=> (type=JvmTypeReference name=ValidID) | name=ValidID) '=' right=(APropertyReference|XExpression)
;


APropertyReference returns xbase::XExpression:
	{APropertyReference} '@' property=[aadl2::Property|AADLPROPERTYREFERENCE]
;

//ComputeDeclaration returns xbase::XVariableDeclaration: 
//{ComputeDeclaration} writeable?='compute'  (=> (type=JvmTypeReference name=ValidID) | name=ValidID)   
//;
ComputeDeclaration : 
{ComputeDeclaration} writeable?='compute'   name=ValidID   
;

// Override XNumberLiteral from XBase
//Accept unit and have value converter turn it into value scaled to base unit


XNumberLiteral returns xbase::XNumberLiteral :
	{XNumberLiteralUnit} value=Number (=>  unit=[aadl2::UnitLiteral|ID])?
	;

 
// ShowValue: ref=[ConstantDecl|ID] ('%' unit=ID)?;	
 ShowValue returns ShowValue: ref=[xbase::XVariableDeclaration] ('%' unit=[aadl2::UnitLiteral|ID])?;	
 

// Qualified classifier reference
AADLCLASSIFIERREFERENCE:
	ID '::' ID ('.' ID)?;

AADLPROPERTYREFERENCE: ID ('::' ID)?;


URIID: STRING;	