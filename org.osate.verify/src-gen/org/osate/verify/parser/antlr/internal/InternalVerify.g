/*
* generated by Xtext
*/
grammar InternalVerify;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.osate.verify.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.osate.verify.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.verify.services.VerifyGrammarAccess;

}

@parser::members {

 	private VerifyGrammarAccess grammarAccess;
 	
    public InternalVerifyParser(TokenStream input, VerifyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Verification";	
   	}
   	
   	@Override
   	protected VerifyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleVerification
entryRuleVerification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationRule()); }
	 iv_ruleVerification=ruleVerification 
	 { $current=$iv_ruleVerification.current; } 
	 EOF 
;

// Rule Verification
ruleVerification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationAccess().getContentsVerificationLibraryParserRuleCall_0_0()); 
	    }
		lv_contents_0_1=ruleVerificationLibrary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_0_1, 
        		"VerificationLibrary");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationAccess().getContentsVerificationPlanParserRuleCall_0_1()); 
	    }
		lv_contents_0_2=ruleVerificationPlan		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_0_2, 
        		"VerificationPlan");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
;





// Entry rule entryRuleVerificationPlan
entryRuleVerificationPlan returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationPlanRule()); }
	 iv_ruleVerificationPlan=ruleVerificationPlan 
	 { $current=$iv_ruleVerificationPlan.current; } 
	 EOF 
;

// Rule VerificationPlan
ruleVerificationPlan returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='plan' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationPlanAccess().getPlanKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationPlanAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationPlanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationPlanAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationPlanRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationPlanAccess().getTargetComponentClassifierCrossReference_3_0()); 
	    }
		ruleAadlClassifierReference		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationPlanAccess().getLeftSquareBracketKeyword_4());
    }
(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationPlanAccess().getDescriptionKeyword_5_0());
    }
(
(
		lv_description_6_0=RULE_STRING
		{
			newLeafNode(lv_description_6_0, grammarAccess.getVerificationPlanAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationPlanRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationPlanAccess().getClaimsClaimParserRuleCall_6_0()); 
	    }
		lv_claims_7_0=ruleClaim		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationPlanRule());
	        }
       		add(
       			$current, 
       			"claims",
        		lv_claims_7_0, 
        		"Claim");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationPlanAccess().getRightSquareBracketKeyword_7());
    }
)
;





// Entry rule entryRuleVerificationLibrary
entryRuleVerificationLibrary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationLibraryRule()); }
	 iv_ruleVerificationLibrary=ruleVerificationLibrary 
	 { $current=$iv_ruleVerificationLibrary.current; } 
	 EOF 
;

// Rule VerificationLibrary
ruleVerificationLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='library' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationLibraryAccess().getLibraryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationLibraryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationLibraryAccess().getForKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationLibraryRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getTargetRequirementCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationLibraryAccess().getLeftSquareBracketKeyword_3());
    }
(	otherlv_5='class' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationLibraryAccess().getClassKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getMethodClassesQualifiedNameParserRuleCall_4_1_0()); 
	    }
		lv_methodClasses_6_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"methodClasses",
        		lv_methodClasses_6_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getContentVerificationActivityParserRuleCall_5_0_0()); 
	    }
		lv_content_7_1=ruleVerificationActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_7_1, 
        		"VerificationActivity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getContentVerificationMethodParserRuleCall_5_0_1()); 
	    }
		lv_content_7_2=ruleVerificationMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_7_2, 
        		"VerificationMethod");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getContentVerificationFolderParserRuleCall_5_0_2()); 
	    }
		lv_content_7_3=ruleVerificationFolder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_7_3, 
        		"VerificationFolder");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationLibraryAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleVerificationFolder
entryRuleVerificationFolder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationFolderRule()); }
	 iv_ruleVerificationFolder=ruleVerificationFolder 
	 { $current=$iv_ruleVerificationFolder.current; } 
	 EOF 
;

// Rule VerificationFolder
ruleVerificationFolder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='folder' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationFolderAccess().getFolderKeyword_0());
    }
(
(
		lv_label_1_0=RULE_ID
		{
			newLeafNode(lv_label_1_0, grammarAccess.getVerificationFolderAccess().getLabelIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationFolderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationFolderAccess().getForKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationFolderRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationFolderAccess().getTargetRequirementCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationFolderAccess().getLeftSquareBracketKeyword_3());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationFolderAccess().getContentVerificationActivityParserRuleCall_4_0_0()); 
	    }
		lv_content_5_1=ruleVerificationActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFolderRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_5_1, 
        		"VerificationActivity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationFolderAccess().getContentVerificationMethodParserRuleCall_4_0_1()); 
	    }
		lv_content_5_2=ruleVerificationMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFolderRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_5_2, 
        		"VerificationMethod");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationFolderAccess().getContentVerificationFolderParserRuleCall_4_0_2()); 
	    }
		lv_content_5_3=ruleVerificationFolder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationFolderRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_5_3, 
        		"VerificationFolder");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationFolderAccess().getRightSquareBracketKeyword_5());
    }
)
;







// Entry rule entryRuleClaim
entryRuleClaim returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClaimRule()); }
	 iv_ruleClaim=ruleClaim 
	 { $current=$iv_ruleClaim.current; } 
	 EOF 
;

// Rule Claim
ruleClaim returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='claim' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClaimAccess().getClaimKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClaimAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClaimAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClaimAccess().getRequirementRequirementCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='assert' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClaimAccess().getAssertKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimAccess().getAssertArgumentExprParserRuleCall_5_0()); 
	    }
		lv_assert_5_0=ruleArgumentExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_5_0, 
        		"ArgumentExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='rationale' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClaimAccess().getRationaleKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimAccess().getRationaleMultiLineStringParserRuleCall_6_1_0()); 
	    }
		lv_rationale_7_0=ruleMultiLineString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_7_0, 
        		"MultiLineString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getClaimAccess().getLeftSquareBracketKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimAccess().getSubclaimsClaimParserRuleCall_7_1_0()); 
	    }
		lv_subclaims_9_0=ruleClaim		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimRule());
	        }
       		add(
       			$current, 
       			"subclaims",
        		lv_subclaims_9_0, 
        		"Claim");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getClaimAccess().getRightSquareBracketKeyword_7_2());
    }
)?)
;





// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationActivityRule()); }
	 iv_ruleVerificationActivity=ruleVerificationActivity 
	 { $current=$iv_ruleVerificationActivity.current; } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='activity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationActivityAccess().getActivityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationActivityAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getTargetComponentClassifierCrossReference_3_0()); 
	    }
		ruleAadlClassifierReference		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationActivityAccess().getLeftSquareBracketKeyword_4());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 0);
	 				}
					({true}?=>(	otherlv_6='title' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationActivityAccess().getTitleKeyword_5_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_5_0_1_0()); 
	    }
		lv_title_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 1);
	 				}
					({true}?=>(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDescriptionDescriptionParserRuleCall_5_1_1_0()); 
	    }
		lv_description_9_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 2);
	 				}
					({true}?=>(	otherlv_10='category' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationActivityAccess().getCategoryKeyword_5_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getCategorySelectionCategoryCrossReference_5_2_1_0()); 
	    }
		ruleCatRef		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), 3);
	 				}
					({true}?=>(	otherlv_12='method' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodCrossReference_5_3_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5());
	}

)	otherlv_14=']' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationActivityAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleVerificationCondition
entryRuleVerificationCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationConditionRule()); }
	 iv_ruleVerificationCondition=ruleVerificationCondition 
	 { $current=$iv_ruleVerificationCondition.current; } 
	 EOF 
;

// Rule VerificationCondition
ruleVerificationCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='assumption' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationConditionAccess().getAssumptionKeyword_0_0_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getVerificationConditionAccess().getVerificationAssumptionAction_0_0_1(),
            $current);
    }
))
    |(	otherlv_2='precondition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationConditionAccess().getPreconditionKeyword_0_1_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getVerificationConditionAccess().getVerificationPreconditionAction_0_1_1(),
            $current);
    }
)))(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getVerificationConditionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"ID");
	    }

)
)	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationConditionAccess().getLeftSquareBracketKeyword_2());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_7='title' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationConditionAccess().getTitleKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getTitleValueStringParserRuleCall_3_0_1_0()); 
	    }
		lv_title_8_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_8_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_9='description' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationConditionAccess().getDescriptionKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getDescriptionDescriptionParserRuleCall_3_1_1_0()); 
	    }
		lv_description_10_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_11='assert' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVerificationConditionAccess().getAssertKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getAssertArgumentExprParserRuleCall_3_2_1_0()); 
	    }
		lv_assert_12_0=ruleArgumentExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_12_0, 
        		"ArgumentExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 3);
	 				}
					({true}?=>(	otherlv_13='met' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationConditionAccess().getMetKeyword_3_3_0());
    }
	otherlv_14='by' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationConditionAccess().getByKeyword_3_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getMetByRequirementCrossReference_3_3_2_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 4);
	 				}
					({true}?=>(	otherlv_16='rationale' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationConditionAccess().getRationaleKeyword_3_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getRationaleMultiLineStringParserRuleCall_3_4_1_0()); 
	    }
		lv_rationale_17_0=ruleMultiLineString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_17_0, 
        		"MultiLineString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), 5);
	 				}
					({true}?=>(	otherlv_18='issues' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getVerificationConditionAccess().getIssuesKeyword_3_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getIssueMultiLineStringParserRuleCall_3_5_1_0()); 
	    }
		lv_issue_19_0=ruleMultiLineString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_19_0, 
        		"MultiLineString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getVerificationConditionAccess().getCommaKeyword_3_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationConditionAccess().getIssueMultiLineStringParserRuleCall_3_5_2_1_0()); 
	    }
		lv_issue_21_0=ruleMultiLineString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationConditionRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_21_0, 
        		"MultiLineString");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3());
	}

)	otherlv_22=']' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getVerificationConditionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleArgumentExpr
entryRuleArgumentExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentExprRule()); }
	 iv_ruleArgumentExpr=ruleArgumentExpr 
	 { $current=$iv_ruleArgumentExpr.current; } 
	 EOF 
;

// Rule ArgumentExpr
ruleArgumentExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getArgumentExprAccess().getAllEvidenceExprParserRuleCall()); 
    }
    this_AllEvidenceExpr_0=ruleAllEvidenceExpr
    { 
        $current = $this_AllEvidenceExpr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAllEvidenceExpr
entryRuleAllEvidenceExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllEvidenceExprRule()); }
	 iv_ruleAllEvidenceExpr=ruleAllEvidenceExpr 
	 { $current=$iv_ruleAllEvidenceExpr.current; } 
	 EOF 
;

// Rule AllEvidenceExpr
ruleAllEvidenceExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='all' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAllEvidenceExprAccess().getAllKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getAllEvidenceExprAccess().getAllExprAction_1(),
            $current);
    }
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAllEvidenceExprAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAllEvidenceExprAccess().getAllAndThenEvidenceExprParserRuleCall_3_0()); 
	    }
		lv_all_3_0=ruleAndThenEvidenceExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllEvidenceExprRule());
	        }
       		add(
       			$current, 
       			"all",
        		lv_all_3_0, 
        		"AndThenEvidenceExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAllEvidenceExprAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAllEvidenceExprAccess().getAllAndThenEvidenceExprParserRuleCall_4_1_0()); 
	    }
		lv_all_5_0=ruleAndThenEvidenceExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAllEvidenceExprRule());
	        }
       		add(
       			$current, 
       			"all",
        		lv_all_5_0, 
        		"AndThenEvidenceExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAllEvidenceExprAccess().getRightSquareBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAndThenEvidenceExpr
entryRuleAndThenEvidenceExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndThenEvidenceExprRule()); }
	 iv_ruleAndThenEvidenceExpr=ruleAndThenEvidenceExpr 
	 { $current=$iv_ruleAndThenEvidenceExpr.current; } 
	 EOF 
;

// Rule AndThenEvidenceExpr
ruleAndThenEvidenceExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndThenEvidenceExprAccess().getFailThenEvidenceExprParserRuleCall_0()); 
    }
    this_FailThenEvidenceExpr_0=ruleFailThenEvidenceExpr
    { 
        $current = $this_FailThenEvidenceExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	'andthen' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndThenEvidenceExprAccess().getAndThenExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'andthen' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getAndThenEvidenceExprAccess().getOpAndthenKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenEvidenceExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "andthen");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAndThenEvidenceExprAccess().getRightAndThenEvidenceExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAndThenEvidenceExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndThenEvidenceExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AndThenEvidenceExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFailThenEvidenceExpr
entryRuleFailThenEvidenceExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFailThenEvidenceExprRule()); }
	 iv_ruleFailThenEvidenceExpr=ruleFailThenEvidenceExpr 
	 { $current=$iv_ruleFailThenEvidenceExpr.current; } 
	 EOF 
;

// Rule FailThenEvidenceExpr
ruleFailThenEvidenceExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFailThenEvidenceExprAccess().getAtomicEvidenceExprParserRuleCall_0()); 
    }
    this_AtomicEvidenceExpr_0=ruleAtomicEvidenceExpr
    { 
        $current = $this_AtomicEvidenceExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	'failthen' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFailThenEvidenceExprAccess().getFailThenExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'failthen' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFailThenEvidenceExprAccess().getOpFailthenKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenEvidenceExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "failthen");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getFailThenEvidenceExprAccess().getRightFailThenEvidenceExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleFailThenEvidenceExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFailThenEvidenceExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FailThenEvidenceExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAtomicEvidenceExpr
entryRuleAtomicEvidenceExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicEvidenceExprRule()); }
	 iv_ruleAtomicEvidenceExpr=ruleAtomicEvidenceExpr 
	 { $current=$iv_ruleAtomicEvidenceExpr.current; } 
	 EOF 
;

// Rule AtomicEvidenceExpr
ruleAtomicEvidenceExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAtomicEvidenceExprAccess().getConditionalEvidenceParserRuleCall_0()); 
    }
    this_ConditionalEvidence_0=ruleConditionalEvidence
    { 
        $current = $this_ConditionalEvidence_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAtomicEvidenceExprAccess().getLeftParenthesisKeyword_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getAtomicEvidenceExprAccess().getAndThenEvidenceExprParserRuleCall_1_1()); 
    }
    this_AndThenEvidenceExpr_2=ruleAndThenEvidenceExpr
    { 
        $current = $this_AndThenEvidenceExpr_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAtomicEvidenceExprAccess().getRightParenthesisKeyword_1_2());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getAtomicEvidenceExprAccess().getAllEvidenceExprParserRuleCall_2()); 
    }
    this_AllEvidenceExpr_4=ruleAllEvidenceExpr
    { 
        $current = $this_AllEvidenceExpr_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConditionalEvidence
entryRuleConditionalEvidence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalEvidenceRule()); }
	 iv_ruleConditionalEvidence=ruleConditionalEvidence 
	 { $current=$iv_ruleConditionalEvidence.current; } 
	 EOF 
;

// Rule ConditionalEvidence
ruleConditionalEvidence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConditionalEvidenceAccess().getVAReferenceParserRuleCall_0()); 
    }
    this_VAReference_0=ruleVAReference
    { 
        $current = $this_VAReference_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	'when' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalEvidenceAccess().getConditionalExprVerificationAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'when' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getConditionalEvidenceAccess().getOpWhenKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalEvidenceRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "when");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalEvidenceAccess().getConditionOrConditionExprParserRuleCall_1_1_0()); 
	    }
		lv_condition_3_0=ruleOrConditionExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalEvidenceRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_3_0, 
        		"OrConditionExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVAReference
entryRuleVAReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVAReferenceRule()); }
	 iv_ruleVAReference=ruleVAReference 
	 { $current=$iv_ruleVAReference.current; } 
	 EOF 
;

// Rule VAReference
ruleVAReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVAReferenceAccess().getRefExprAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVAReferenceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVAReferenceAccess().getVerificationVerificationActivityCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='weight' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVAReferenceAccess().getWeightKeyword_2_0());
    }
(
(
		lv_weight_3_0=RULE_INT
		{
			newLeafNode(lv_weight_3_0, grammarAccess.getVAReferenceAccess().getWeightINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVAReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_3_0, 
        		"INT");
	    }

)
))?)
;





// Entry rule entryRuleOrConditionExpr
entryRuleOrConditionExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrConditionExprRule()); }
	 iv_ruleOrConditionExpr=ruleOrConditionExpr 
	 { $current=$iv_ruleOrConditionExpr.current; } 
	 EOF 
;

// Rule OrConditionExpr
ruleOrConditionExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrConditionExprAccess().getAndConditionExprParserRuleCall_0()); 
    }
    this_AndConditionExpr_0=ruleAndConditionExpr
    { 
        $current = $this_AndConditionExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	'or' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrConditionExprAccess().getConditionExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'or' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getOrConditionExprAccess().getOpOrKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrConditionExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "or");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getOrConditionExprAccess().getRightAndConditionExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAndConditionExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrConditionExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AndConditionExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndConditionExpr
entryRuleAndConditionExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndConditionExprRule()); }
	 iv_ruleAndConditionExpr=ruleAndConditionExpr 
	 { $current=$iv_ruleAndConditionExpr.current; } 
	 EOF 
;

// Rule AndConditionExpr
ruleAndConditionExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndConditionExprAccess().getAtomicConditionExprParserRuleCall_0()); 
    }
    this_AtomicConditionExpr_0=ruleAtomicConditionExpr
    { 
        $current = $this_AtomicConditionExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
(((((
)(
(
	'and' 
 

)
)))=>((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndConditionExprAccess().getConditionExprLeftAction_1_0_0_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'and' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getAndConditionExprAccess().getOpAndKeyword_1_0_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndConditionExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "and");
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getAndConditionExprAccess().getRightAtomicConditionExprParserRuleCall_1_1_0()); 
	    }
		lv_right_3_0=ruleAtomicConditionExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndConditionExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AtomicConditionExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAtomicConditionExpr
entryRuleAtomicConditionExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicConditionExprRule()); }
	 iv_ruleAtomicConditionExpr=ruleAtomicConditionExpr 
	 { $current=$iv_ruleAtomicConditionExpr.current; } 
	 EOF 
;

// Rule AtomicConditionExpr
ruleAtomicConditionExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAtomicConditionExprRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAtomicConditionExprAccess().getCatVerificationCategoryCrossReference_0()); 
	    }
		ruleCatRef		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationMethodRule()); }
	 iv_ruleVerificationMethod=ruleVerificationMethod 
	 { $current=$iv_ruleVerificationMethod.current; } 
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='method' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationMethodAccess().getMethodKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationMethodAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getTitleValueStringParserRuleCall_2_1_0()); 
	    }
		lv_title_3_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationMethodRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationMethodAccess().getLeftSquareBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getMethodTypeSupportedTypesEnumRuleCall_4_0()); 
	    }
		lv_methodType_5_0=ruleSupportedTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationMethodRule());
	        }
       		set(
       			$current, 
       			"methodType",
        		lv_methodType_5_0, 
        		"SupportedTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getMethodQualifiedNameParserRuleCall_5_0()); 
	    }
		lv_method_6_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationMethodRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_6_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 0);
	 				}
					({true}?=>(	otherlv_8='description' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationMethodAccess().getDescriptionKeyword_6_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getDescriptionDescriptionParserRuleCall_6_0_1_0()); 
	    }
		lv_description_9_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationMethodRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 1);
	 				}
					({true}?=>(	otherlv_10='category' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationMethodAccess().getCategoryKeyword_6_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationMethodRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getCategoryVerificationCategoryCrossReference_6_1_1_0()); 
	    }
		ruleCatRef		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 2);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationMethodAccess().getConditionsVerificationConditionParserRuleCall_6_2_0()); 
	    }
		lv_conditions_12_0=ruleVerificationCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationMethodRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_12_0, 
        		"VerificationCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	}

)	otherlv_13=']' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationMethodAccess().getRightSquareBracketKeyword_7());
    }
)
;







// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruleDescription=ruleDescription 
	 { $current=$iv_ruleDescription.current; } 
	 EOF 
;

// Rule Description
ruleDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); 
	    }
		lv_description_0_0=ruleDescriptionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionRule());
	        }
       		add(
       			$current, 
       			"description",
        		lv_description_0_0, 
        		"DescriptionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleDescriptionElement
entryRuleDescriptionElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionElementRule()); }
	 iv_ruleDescriptionElement=ruleDescriptionElement 
	 { $current=$iv_ruleDescriptionElement.current; } 
	 EOF 
;

// Rule DescriptionElement
ruleDescriptionElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_text_0_0=RULE_STRING
		{
			newLeafNode(lv_text_0_0, grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionElementRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getDescriptionElementAccess().getRefEObjectCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleReferencePath
entryRuleReferencePath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferencePathRule()); }
	 iv_ruleReferencePath=ruleReferencePath 
	 { $current=$iv_ruleReferencePath.current; } 
	 EOF 
;

// Rule ReferencePath
ruleReferencePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferencePathRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); 
	}

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); 
	    }
		lv_subpath_2_0=ruleReferencePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferencePathRule());
	        }
       		set(
       			$current, 
       			"subpath",
        		lv_subpath_2_0, 
        		"ReferencePath");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;











// Entry rule entryRuleMultiLineString
entryRuleMultiLineString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiLineStringRule()); } 
	 iv_ruleMultiLineString=ruleMultiLineString 
	 { $current=$iv_ruleMultiLineString.current.getText(); }  
	 EOF 
;

// Rule MultiLineString
ruleMultiLineString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='\'\'\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiLineStringAccess().getApostropheApostropheApostropheKeyword_0()); 
    }
(    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getMultiLineStringAccess().getSTRINGTerminalRuleCall_1()); 
    }
)*
	kw='\'\'\'' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiLineStringAccess().getApostropheApostropheApostropheKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleValueString
entryRuleValueString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueStringRule()); } 
	 iv_ruleValueString=ruleValueString 
	 { $current=$iv_ruleValueString.current.getText(); }  
	 EOF 
;

// Rule ValueString
ruleValueString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleAadlClassifierReference
entryRuleAadlClassifierReference returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAadlClassifierReferenceRule()); } 
	 iv_ruleAadlClassifierReference=ruleAadlClassifierReference 
	 { $current=$iv_ruleAadlClassifierReference.current.getText(); }  
	 EOF 
;

// Rule AadlClassifierReference
ruleAadlClassifierReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleCatRef
entryRuleCatRef returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCatRefRule()); } 
	 iv_ruleCatRef=ruleCatRef 
	 { $current=$iv_ruleCatRef.current.getText(); }  
	 EOF 
;

// Rule CatRef
ruleCatRef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getCatRefAccess().getIDTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;







// Rule SupportedTypes
ruleSupportedTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='singlepredicate' 
	{
        $current = grammarAccess.getSupportedTypesAccess().getSINGLEPREDICATEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSupportedTypesAccess().getSINGLEPREDICATEEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='singleanalysis' 
	{
        $current = grammarAccess.getSupportedTypesAccess().getSINGLEANALYSISEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSupportedTypesAccess().getSINGLEANALYSISEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='multipredicate' 
	{
        $current = grammarAccess.getSupportedTypesAccess().getMULTIPREDICATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getSupportedTypesAccess().getMULTIPREDICATEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='multianalysis' 
	{
        $current = grammarAccess.getSupportedTypesAccess().getMULTIANALYSISEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getSupportedTypesAccess().getMULTIANALYSISEnumLiteralDeclaration_3()); 
    }
));



// Rule IssueType
ruleIssueType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='error' 
	{
        $current = grammarAccess.getIssueTypeAccess().getERROREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getIssueTypeAccess().getERROREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='warning' 
	{
        $current = grammarAccess.getIssueTypeAccess().getWARNINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getIssueTypeAccess().getWARNINGEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='info' 
	{
        $current = grammarAccess.getIssueTypeAccess().getINFOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getIssueTypeAccess().getINFOEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


