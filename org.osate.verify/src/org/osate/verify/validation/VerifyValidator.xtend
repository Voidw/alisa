/*
 * generated by Xtext
 */
package org.osate.verify.validation

import org.osate.verify.verify.VerificationMethod

import org.eclipse.xtext.validation.Check
import org.osate.verify.verify.VerifyPackage
import com.google.common.base.Preconditions
import org.osate.verify.verify.VerificationCondition
import org.osate.verify.verify.VerificationActivity

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class VerifyValidator extends AbstractVerifyValidator {

  public static val MISSING_METHOD_PATH = "org.osate.organization.missingMethodPath"
  public static val MISSING_METHOD_REFERENCE = "org.osate.organization.missingMethodReference"

	@Check
	def checkMissingMethodPath(VerificationMethod method) {
		if (method.methodPath == null) {
			warning('Verification method should have a method path', 
					VerifyPackage.Literals.VERIFICATION_METHOD__METHOD_PATH,
					MISSING_METHOD_PATH)
		}
	}
	@Check
	def checkMissingMethodReference(VerificationCondition cond) {
		if (cond.method == null) {
			warning('Verification precondition or validation should have a verification method reference', 
					VerifyPackage.Literals.VERIFICATION_CONDITION__METHOD,
					MISSING_METHOD_REFERENCE)
		}
	}
	@Check
	def checkMissingMethodReference(VerificationActivity va) {
		if (va.method == null) {
			warning('Verification activity should have a method reference', 
					VerifyPackage.Literals.VERIFICATION_ACTIVITY__METHOD,
					MISSING_METHOD_REFERENCE)
		}
	}
}
