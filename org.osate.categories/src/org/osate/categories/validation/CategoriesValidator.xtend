/**
 * Copyright 2015 Carnegie Mellon University. All Rights Reserved.
 *
 * NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE
 * MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO
 * WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING,
 * BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY,
 * EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON
 * UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM
 * PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
 *
 * Released under the Eclipse Public License (http://www.eclipse.org/org/documents/epl-v10.php)
 *
 * See COPYRIGHT file for full details.
 */

/*
 * generated by Xtext
 */
package org.osate.categories.validation

import org.eclipse.xtext.validation.Check
import org.eclipse.xtext.validation.CheckType
import org.osate.categories.categories.Categories
import org.osate.categories.categories.PhaseCategories
import org.osate.categories.categories.QualityCategories
import org.osate.categories.categories.UserCategories
import org.eclipse.xtext.validation.ValidationMessageAcceptor

//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class CategoriesValidator extends AbstractCategoriesValidator {
	
	@Check(CheckType.FAST)
	def void checkDuplicateCategoryNames(Categories categories){
		val categoriesTypeName = 
		switch categories{
			UserCategories : "category"
			QualityCategories : "quality"
			PhaseCategories : "phase"
		}
		categories.category.groupBy[name.toLowerCase].filter[name, dupeList| dupeList.size > 1].
			forEach[name, dupes|dupes.forEach[dupe|
				warning("Category '" + dupe.name + "' has a duplicate under '" + categoriesTypeName +"'.",
						dupe, null, ValidationMessageAcceptor.INSIGNIFICANT_INDEX, null)]]
	}
}
