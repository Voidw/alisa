/*
 * generated by Xtext
 */
package org.osate.categories.validation

import com.google.inject.Inject
import org.eclipse.xtext.scoping.IGlobalScopeProvider
import org.eclipse.xtext.validation.Check
import org.osate.categories.categories.CategoriesPackage
import org.osate.categories.categories.Category
import org.osate.categories.util.CategoriesUtil

//import org.eclipse.xtext.validation.Check
/**
 * Custom validation rules. 
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class CategoriesValidator extends AbstractCategoriesValidator {
	extension CategoriesUtil cu = new CategoriesUtil

	public static val CYCLES_CATEGORY = "org.osate.categories.CyclesCategory"

	/**
	 * check that there are no cycles in Category subcategories
	 */
	@Check
	def void checkNoCycleCategoryHierarchy(Category cat) {
		val cyclecat = CategoriesUtil.hasCycle(cat)
		if (cyclecat != null) {
			error(
				"Cycle in subcategory '"+cat.name+"' of Category '" + cyclecat.name + "'",
				CategoriesPackage::eINSTANCE.category_Name,
				CYCLES_CATEGORY,
				cat.name
			)
		}
	}

}
