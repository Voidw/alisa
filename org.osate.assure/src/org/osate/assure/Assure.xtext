grammar org.osate.assure.Assure with org.eclipse.xtext.common.Terminals

generate assure "http://www.osate.org/assure/Assure"
import "http://aadl.info/AADL/2.0" as aadl2
import "http://aadl.info/AADL/2.0/instance" as instance
import "http://www.osate.org/reqspec/ReqSpec" as ReqSpec
import "http://www.osate.org/verify/Verify" as Verify

 
CaseResult:
	'case' name=ID 
	'for' target=[instance::InstanceObject]
	'['
	( result=AggregateResultData)?
	(subCaseResult += CaseResult)*
	(claimResult += ClaimResult)*
	']'  
;

VerificationResult:
	'verification' name=ID 
	'of' verificationActivity=[Verify::VerificationActivity]
	'for' target=[instance::InstanceObject]
	'['(('output'  title=STRING)?
	&('logfile'  description=STRING)?
	&('date'  date=STRING)?
	&('state'  state=VerificationResultState)?
	&('status'  status=VerificationResultStatus)? )
	(assumptionVerificationResult+= VerificationResult)*
	']'  
;

ClaimResult:
	'claim' name=ID 'of' requirement=[ReqSpec::Requirement]
	'for' target=[instance::InstanceObject]
	'['
	( result=AggregateResultData)?
	(subClaimResult += ClaimResult)*
	(verificationResult+= VerificationResult)*
	']'  
;


AggregateResultData:
	('pass'  passCount=INT)
	('fail'  failCount=INT)
	('neutral' neutralCount=INT)
	('unknown' unknownCount=INT) 
	
;

AssuranceResult: VerificationResult | ClaimResult | CaseResult;

enum  VerificationResultState:
	TODO='todo'  // verification to be performed
	| RUNNING='running' // verification in progress (background processing)
	| REDO='redo' // invalidated while in progress. redo verification.
	| COMPLETED='completed' // completed. verification result is valid
;

enum VerificationResultStatus:
	TBD='tbd' | PASS='pass' | FAIL='fail' | UNKNOWN='unknown' 
;
