grammar org.osate.assure.Assure with org.eclipse.xtext.common.Terminals

generate assure "http://www.osate.org/assure/Assure"
import "http://aadl.info/AADL/2.0" as aadl2
import "http://aadl.info/AADL/2.0/instance" as instance
import "http://www.osate.org/reqspec/ReqSpec" as ReqSpec
import "http://www.osate.org/verify/Verify" as Verify

 AssuranceCase: 
 	'assurance' 'case' name = ID
 	'for' target = [instance::SystemInstance]
 	'[' results+= AssuranceResult+
 	']'
 ;

VerificationResult:
	'verification' 'result' name=ID 'of' verificationActivity=[Verify::VerificationActivity]
	'['(('output'  title=STRING)?
	&('logfile'  description=STRING)?
	&('date'  method=STRING)?
	&('state'  state=VerificationResultState)?
	&('status'  status=VerificationResultStatus)? )
	(assumptionVerificationResult+= VerificationResult)*
	']'  
;

ClaimResult:
	'claim' 'result' name=ID 'of' requirement=[ReqSpec::Requirement]
	'['('pass'  passCount=INT)
	('fail'  failCount=INT)
	('neutral' neutralCount=INT)
	('unknown' unknownCount=INT) 
	(subClaimResult += ClaimResult)*
	(subVAResult+= VerificationResult)*
	']'  
;

AssuranceResult: VerificationResult | ClaimResult;

enum  VerificationResultState:
	PERFORM='perform'  // verification to be performed
	| INPROGRESS='inprogress' // verification in progress (background processing)
	| REDO='redo' // invalidated while in progress. redo verification.
	| COMPLETED='completed' // completed. verification result is valid
;

enum VerificationResultStatus:
	UNKNOWN='unknown' | PASS='pass' | FAIL='fail' | NEUTRAL='neutral' 
;
