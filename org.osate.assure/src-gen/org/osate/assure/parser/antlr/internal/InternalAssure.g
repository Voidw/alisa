/*
* generated by Xtext
*/
grammar InternalAssure;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.osate.assure.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.osate.assure.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.assure.services.AssureGrammarAccess;

}

@parser::members {

 	private AssureGrammarAccess grammarAccess;
 	
    public InternalAssureParser(TokenStream input, AssureGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CaseResult";	
   	}
   	
   	@Override
   	protected AssureGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCaseResult
entryRuleCaseResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseResultRule()); }
	 iv_ruleCaseResult=ruleCaseResult 
	 { $current=$iv_ruleCaseResult.current; } 
	 EOF 
;

// Rule CaseResult
ruleCaseResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCaseResultAccess().getCaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCaseResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCaseResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getCaseResultAccess().getTargetInstanceObjectCrossReference_3_0()); 
	}

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCaseResultAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getResultAggregateResultDataParserRuleCall_5_0()); 
	    }
		lv_result_5_0=ruleAggregateResultData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseResultRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_5_0, 
        		"AggregateResultData");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getSubCaseResultCaseResultParserRuleCall_6_0()); 
	    }
		lv_subCaseResult_6_0=ruleCaseResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseResultRule());
	        }
       		add(
       			$current, 
       			"subCaseResult",
        		lv_subCaseResult_6_0, 
        		"CaseResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getClaimResultClaimResultParserRuleCall_7_0()); 
	    }
		lv_claimResult_7_0=ruleClaimResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseResultRule());
	        }
       		add(
       			$current, 
       			"claimResult",
        		lv_claimResult_7_0, 
        		"ClaimResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCaseResultAccess().getRightSquareBracketKeyword_8());
    }
)
;





// Entry rule entryRuleVerificationResult
entryRuleVerificationResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationResultRule()); }
	 iv_ruleVerificationResult=ruleVerificationResult 
	 { $current=$iv_ruleVerificationResult.current; } 
	 EOF 
;

// Rule VerificationResult
ruleVerificationResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='verification' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationResultAccess().getVerificationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationResultAccess().getOfKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getVerificationResultAccess().getVerificationActivityVerificationActivityCrossReference_3_0()); 
	}

)
)	otherlv_4='for' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationResultAccess().getForKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getVerificationResultAccess().getTargetInstanceObjectCrossReference_5_0()); 
	}

)
)	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationResultAccess().getLeftSquareBracketKeyword_6());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 0);
	 				}
					({true}?=>(	otherlv_8='output' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationResultAccess().getOutputKeyword_7_0_0());
    }
(
(
		lv_title_9_0=RULE_STRING
		{
			newLeafNode(lv_title_9_0, grammarAccess.getVerificationResultAccess().getTitleSTRINGTerminalRuleCall_7_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_9_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 1);
	 				}
					({true}?=>(	otherlv_10='logfile' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationResultAccess().getLogfileKeyword_7_1_0());
    }
(
(
		lv_description_11_0=RULE_STRING
		{
			newLeafNode(lv_description_11_0, grammarAccess.getVerificationResultAccess().getDescriptionSTRINGTerminalRuleCall_7_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 2);
	 				}
					({true}?=>(	otherlv_12='date' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationResultAccess().getDateKeyword_7_2_0());
    }
(
(
		lv_date_13_0=RULE_STRING
		{
			newLeafNode(lv_date_13_0, grammarAccess.getVerificationResultAccess().getDateSTRINGTerminalRuleCall_7_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"date",
        		lv_date_13_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 3);
	 				}
					({true}?=>(	otherlv_14='state' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationResultAccess().getStateKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateEnumRuleCall_7_3_1_0()); 
	    }
		lv_state_15_0=ruleVerificationResultState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_15_0, 
        		"VerificationResultState");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), 4);
	 				}
					({true}?=>(	otherlv_16='status' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationResultAccess().getStatusKeyword_7_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusEnumRuleCall_7_4_1_0()); 
	    }
		lv_status_17_0=ruleVerificationResultStatus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"status",
        		lv_status_17_0, 
        		"VerificationResultStatus");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7());
	}

)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getAssumptionVerificationResultVerificationResultParserRuleCall_8_0()); 
	    }
		lv_assumptionVerificationResult_18_0=ruleVerificationResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		add(
       			$current, 
       			"assumptionVerificationResult",
        		lv_assumptionVerificationResult_18_0, 
        		"VerificationResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_19=']' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getVerificationResultAccess().getRightSquareBracketKeyword_9());
    }
)
;





// Entry rule entryRuleClaimResult
entryRuleClaimResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClaimResultRule()); }
	 iv_ruleClaimResult=ruleClaimResult 
	 { $current=$iv_ruleClaimResult.current; } 
	 EOF 
;

// Rule ClaimResult
ruleClaimResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='claim' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClaimResultAccess().getClaimKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClaimResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='of' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClaimResultAccess().getOfKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getClaimResultAccess().getRequirementRequirementCrossReference_3_0()); 
	}

)
)	otherlv_4='for' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClaimResultAccess().getForKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getClaimResultAccess().getTargetInstanceObjectCrossReference_5_0()); 
	}

)
)	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClaimResultAccess().getLeftSquareBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getResultAggregateResultDataParserRuleCall_7_0()); 
	    }
		lv_result_7_0=ruleAggregateResultData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimResultRule());
	        }
       		set(
       			$current, 
       			"result",
        		lv_result_7_0, 
        		"AggregateResultData");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getSubClaimResultClaimResultParserRuleCall_8_0()); 
	    }
		lv_subClaimResult_8_0=ruleClaimResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimResultRule());
	        }
       		add(
       			$current, 
       			"subClaimResult",
        		lv_subClaimResult_8_0, 
        		"ClaimResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getVerificationResultVerificationResultParserRuleCall_9_0()); 
	    }
		lv_verificationResult_9_0=ruleVerificationResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimResultRule());
	        }
       		add(
       			$current, 
       			"verificationResult",
        		lv_verificationResult_9_0, 
        		"VerificationResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getClaimResultAccess().getRightSquareBracketKeyword_10());
    }
)
;





// Entry rule entryRuleAggregateResultData
entryRuleAggregateResultData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAggregateResultDataRule()); }
	 iv_ruleAggregateResultData=ruleAggregateResultData 
	 { $current=$iv_ruleAggregateResultData.current; } 
	 EOF 
;

// Rule AggregateResultData
ruleAggregateResultData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='pass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAggregateResultDataAccess().getPassKeyword_0_0());
    }
(
(
		lv_passCount_1_0=RULE_INT
		{
			newLeafNode(lv_passCount_1_0, grammarAccess.getAggregateResultDataAccess().getPassCountINTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAggregateResultDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"passCount",
        		lv_passCount_1_0, 
        		"INT");
	    }

)
))(	otherlv_2='fail' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAggregateResultDataAccess().getFailKeyword_1_0());
    }
(
(
		lv_failCount_3_0=RULE_INT
		{
			newLeafNode(lv_failCount_3_0, grammarAccess.getAggregateResultDataAccess().getFailCountINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAggregateResultDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_3_0, 
        		"INT");
	    }

)
))(	otherlv_4='neutral' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAggregateResultDataAccess().getNeutralKeyword_2_0());
    }
(
(
		lv_neutralCount_5_0=RULE_INT
		{
			newLeafNode(lv_neutralCount_5_0, grammarAccess.getAggregateResultDataAccess().getNeutralCountINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAggregateResultDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"neutralCount",
        		lv_neutralCount_5_0, 
        		"INT");
	    }

)
))(	otherlv_6='unknown' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAggregateResultDataAccess().getUnknownKeyword_3_0());
    }
(
(
		lv_unknownCount_7_0=RULE_INT
		{
			newLeafNode(lv_unknownCount_7_0, grammarAccess.getAggregateResultDataAccess().getUnknownCountINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAggregateResultDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unknownCount",
        		lv_unknownCount_7_0, 
        		"INT");
	    }

)
)))
;







// Rule VerificationResultState
ruleVerificationResultState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='todo' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getTODOEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStateAccess().getTODOEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='running' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getRUNNINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStateAccess().getRUNNINGEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='redo' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getREDOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStateAccess().getREDOEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='completed' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_3()); 
    }
));



// Rule VerificationResultStatus
ruleVerificationResultStatus returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='tbd' 
	{
        $current = grammarAccess.getVerificationResultStatusAccess().getTBDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStatusAccess().getTBDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='pass' 
	{
        $current = grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='fail' 
	{
        $current = grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='unknown' 
	{
        $current = grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


