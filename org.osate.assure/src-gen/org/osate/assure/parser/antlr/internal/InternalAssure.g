/*
* generated by Xtext
*/
grammar InternalAssure;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.osate.assure.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.osate.assure.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.osate.assure.services.AssureGrammarAccess;

}

@parser::members {

 	private AssureGrammarAccess grammarAccess;
 	
    public InternalAssureParser(TokenStream input, AssureGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CaseResult";	
   	}
   	
   	@Override
   	protected AssureGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCaseResult
entryRuleCaseResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseResultRule()); }
	 iv_ruleCaseResult=ruleCaseResult 
	 { $current=$iv_ruleCaseResult.current; } 
	 EOF 
;

// Rule CaseResult
ruleCaseResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCaseResultAccess().getCaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCaseResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCaseResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getTargetClassifierCrossReference_3_0()); 
	    }
		ruleAadlClassifierReference		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='instance' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCaseResultAccess().getInstanceKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getInstanceInstanceObjectCrossReference_5_0()); 
	    }
		ruleURIID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCaseResultAccess().getLeftSquareBracketKeyword_6());
    }
(	otherlv_7='successcount' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCaseResultAccess().getSuccesscountKeyword_7_0());
    }
(
(
		lv_successCount_8_0=RULE_INT
		{
			newLeafNode(lv_successCount_8_0, grammarAccess.getCaseResultAccess().getSuccessCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='failcount' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCaseResultAccess().getFailcountKeyword_8_0());
    }
(
(
		lv_failCount_10_0=RULE_INT
		{
			newLeafNode(lv_failCount_10_0, grammarAccess.getCaseResultAccess().getFailCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_10_0, 
        		"INT");
	    }

)
))?(	otherlv_11='errorcount' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCaseResultAccess().getErrorcountKeyword_9_0());
    }
(
(
		lv_errorCount_12_0=RULE_INT
		{
			newLeafNode(lv_errorCount_12_0, grammarAccess.getCaseResultAccess().getErrorCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='failthencount' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCaseResultAccess().getFailthencountKeyword_10_0());
    }
(
(
		lv_failthenCount_14_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_14_0, grammarAccess.getCaseResultAccess().getFailthenCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_14_0, 
        		"INT");
	    }

)
))?(	otherlv_15='andthencount' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCaseResultAccess().getAndthencountKeyword_11_0());
    }
(
(
		lv_andthenCount_16_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_16_0, grammarAccess.getCaseResultAccess().getAndthenCountINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_16_0, 
        		"INT");
	    }

)
))?(	otherlv_17='tbdcount' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCaseResultAccess().getTbdcountKeyword_12_0());
    }
(
(
		lv_tbdCount_18_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_18_0, grammarAccess.getCaseResultAccess().getTbdCountINTTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='weight' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCaseResultAccess().getWeightKeyword_13_0());
    }
(
(
		lv_weight_20_0=RULE_INT
		{
			newLeafNode(lv_weight_20_0, grammarAccess.getCaseResultAccess().getWeightINTTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_20_0, 
        		"INT");
	    }

)
))?(	otherlv_21='message' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getCaseResultAccess().getMessageKeyword_14_0());
    }
(
(
		lv_message_22_0=RULE_STRING
		{
			newLeafNode(lv_message_22_0, grammarAccess.getCaseResultAccess().getMessageSTRINGTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_22_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getSubCaseResultCaseResultParserRuleCall_15_0()); 
	    }
		lv_subCaseResult_23_0=ruleCaseResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseResultRule());
	        }
       		add(
       			$current, 
       			"subCaseResult",
        		lv_subCaseResult_23_0, 
        		"CaseResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseResultAccess().getClaimResultClaimResultParserRuleCall_16_0()); 
	    }
		lv_claimResult_24_0=ruleClaimResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseResultRule());
	        }
       		add(
       			$current, 
       			"claimResult",
        		lv_claimResult_24_0, 
        		"ClaimResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_25=']' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getCaseResultAccess().getRightSquareBracketKeyword_17());
    }
)
;





// Entry rule entryRuleClaimResult
entryRuleClaimResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClaimResultRule()); }
	 iv_ruleClaimResult=ruleClaimResult 
	 { $current=$iv_ruleClaimResult.current; } 
	 EOF 
;

// Rule ClaimResult
ruleClaimResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='claim' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClaimResultAccess().getClaimKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClaimResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClaimResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getTargetRequirementCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='instance' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClaimResultAccess().getInstanceKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getInstanceInstanceObjectCrossReference_4_1_0()); 
	    }
		ruleURIID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClaimResultAccess().getLeftSquareBracketKeyword_5());
    }
(	otherlv_7='successcount' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClaimResultAccess().getSuccesscountKeyword_6_0());
    }
(
(
		lv_successCount_8_0=RULE_INT
		{
			newLeafNode(lv_successCount_8_0, grammarAccess.getClaimResultAccess().getSuccessCountINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='failcount' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClaimResultAccess().getFailcountKeyword_7_0());
    }
(
(
		lv_failCount_10_0=RULE_INT
		{
			newLeafNode(lv_failCount_10_0, grammarAccess.getClaimResultAccess().getFailCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_10_0, 
        		"INT");
	    }

)
))?(	otherlv_11='errorcount' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getClaimResultAccess().getErrorcountKeyword_8_0());
    }
(
(
		lv_errorCount_12_0=RULE_INT
		{
			newLeafNode(lv_errorCount_12_0, grammarAccess.getClaimResultAccess().getErrorCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='failthencount' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getClaimResultAccess().getFailthencountKeyword_9_0());
    }
(
(
		lv_failthenCount_14_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_14_0, grammarAccess.getClaimResultAccess().getFailthenCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_14_0, 
        		"INT");
	    }

)
))?(	otherlv_15='andthencount' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getClaimResultAccess().getAndthencountKeyword_10_0());
    }
(
(
		lv_andthenCount_16_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_16_0, grammarAccess.getClaimResultAccess().getAndthenCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_16_0, 
        		"INT");
	    }

)
))?(	otherlv_17='tbdcount' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getClaimResultAccess().getTbdcountKeyword_11_0());
    }
(
(
		lv_tbdCount_18_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_18_0, grammarAccess.getClaimResultAccess().getTbdCountINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='weight' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getClaimResultAccess().getWeightKeyword_12_0());
    }
(
(
		lv_weight_20_0=RULE_INT
		{
			newLeafNode(lv_weight_20_0, grammarAccess.getClaimResultAccess().getWeightINTTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_20_0, 
        		"INT");
	    }

)
))?(	otherlv_21='message' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getClaimResultAccess().getMessageKeyword_13_0());
    }
(
(
		lv_message_22_0=RULE_STRING
		{
			newLeafNode(lv_message_22_0, grammarAccess.getClaimResultAccess().getMessageSTRINGTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClaimResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_22_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getSubClaimResultClaimResultParserRuleCall_14_0()); 
	    }
		lv_subClaimResult_23_0=ruleClaimResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimResultRule());
	        }
       		add(
       			$current, 
       			"subClaimResult",
        		lv_subClaimResult_23_0, 
        		"ClaimResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClaimResultAccess().getVerificationActivityResultVerificationExprParserRuleCall_15_0()); 
	    }
		lv_verificationActivityResult_24_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClaimResultRule());
	        }
       		add(
       			$current, 
       			"verificationActivityResult",
        		lv_verificationActivityResult_24_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_25=']' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getClaimResultAccess().getRightSquareBracketKeyword_16());
    }
)
;





// Entry rule entryRuleAssumptionResult
entryRuleAssumptionResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssumptionResultRule()); }
	 iv_ruleAssumptionResult=ruleAssumptionResult 
	 { $current=$iv_ruleAssumptionResult.current; } 
	 EOF 
;

// Rule AssumptionResult
ruleAssumptionResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='assumption' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssumptionResultAccess().getAssumptionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAssumptionResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssumptionResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAssumptionResultAccess().getTargetVerificationAssumptionCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssumptionResultAccess().getLeftSquareBracketKeyword_4());
    }
(	otherlv_5='successcount' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAssumptionResultAccess().getSuccesscountKeyword_5_0());
    }
(
(
		lv_successCount_6_0=RULE_INT
		{
			newLeafNode(lv_successCount_6_0, grammarAccess.getAssumptionResultAccess().getSuccessCountINTTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_6_0, 
        		"INT");
	    }

)
))?(	otherlv_7='failcount' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssumptionResultAccess().getFailcountKeyword_6_0());
    }
(
(
		lv_failCount_8_0=RULE_INT
		{
			newLeafNode(lv_failCount_8_0, grammarAccess.getAssumptionResultAccess().getFailCountINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='errorcount' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAssumptionResultAccess().getErrorcountKeyword_7_0());
    }
(
(
		lv_errorCount_10_0=RULE_INT
		{
			newLeafNode(lv_errorCount_10_0, grammarAccess.getAssumptionResultAccess().getErrorCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_10_0, 
        		"INT");
	    }

)
))?(	otherlv_11='failthencount' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAssumptionResultAccess().getFailthencountKeyword_8_0());
    }
(
(
		lv_failthenCount_12_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_12_0, grammarAccess.getAssumptionResultAccess().getFailthenCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='andthencount' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAssumptionResultAccess().getAndthencountKeyword_9_0());
    }
(
(
		lv_andthenCount_14_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_14_0, grammarAccess.getAssumptionResultAccess().getAndthenCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_14_0, 
        		"INT");
	    }

)
))?(	otherlv_15='tbdcount' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAssumptionResultAccess().getTbdcountKeyword_10_0());
    }
(
(
		lv_tbdCount_16_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_16_0, grammarAccess.getAssumptionResultAccess().getTbdCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_16_0, 
        		"INT");
	    }

)
))?(	otherlv_17='weight' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getAssumptionResultAccess().getWeightKeyword_11_0());
    }
(
(
		lv_weight_18_0=RULE_INT
		{
			newLeafNode(lv_weight_18_0, grammarAccess.getAssumptionResultAccess().getWeightINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='message' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getAssumptionResultAccess().getMessageKeyword_12_0());
    }
(
(
		lv_message_20_0=RULE_STRING
		{
			newLeafNode(lv_message_20_0, grammarAccess.getAssumptionResultAccess().getMessageSTRINGTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssumptionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_20_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getAssumptionResultAccess().getVerificationActivityResultVerificationExprParserRuleCall_13_0()); 
	    }
		lv_verificationActivityResult_21_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssumptionResultRule());
	        }
       		add(
       			$current, 
       			"verificationActivityResult",
        		lv_verificationActivityResult_21_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_22=']' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getAssumptionResultAccess().getRightSquareBracketKeyword_14());
    }
)
;





// Entry rule entryRulePreconditionResult
entryRulePreconditionResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreconditionResultRule()); }
	 iv_rulePreconditionResult=rulePreconditionResult 
	 { $current=$iv_rulePreconditionResult.current; } 
	 EOF 
;

// Rule PreconditionResult
rulePreconditionResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='precondition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreconditionResultAccess().getPreconditionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPreconditionResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreconditionResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPreconditionResultAccess().getTargetVerificationPreconditionCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPreconditionResultAccess().getLeftSquareBracketKeyword_4());
    }
(	otherlv_5='successcount' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPreconditionResultAccess().getSuccesscountKeyword_5_0());
    }
(
(
		lv_successCount_6_0=RULE_INT
		{
			newLeafNode(lv_successCount_6_0, grammarAccess.getPreconditionResultAccess().getSuccessCountINTTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_6_0, 
        		"INT");
	    }

)
))?(	otherlv_7='failcount' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPreconditionResultAccess().getFailcountKeyword_6_0());
    }
(
(
		lv_failCount_8_0=RULE_INT
		{
			newLeafNode(lv_failCount_8_0, grammarAccess.getPreconditionResultAccess().getFailCountINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='errorcount' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPreconditionResultAccess().getErrorcountKeyword_7_0());
    }
(
(
		lv_errorCount_10_0=RULE_INT
		{
			newLeafNode(lv_errorCount_10_0, grammarAccess.getPreconditionResultAccess().getErrorCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_10_0, 
        		"INT");
	    }

)
))?(	otherlv_11='failthencount' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPreconditionResultAccess().getFailthencountKeyword_8_0());
    }
(
(
		lv_failthenCount_12_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_12_0, grammarAccess.getPreconditionResultAccess().getFailthenCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_12_0, 
        		"INT");
	    }

)
))?(	otherlv_13='andthencount' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPreconditionResultAccess().getAndthencountKeyword_9_0());
    }
(
(
		lv_andthenCount_14_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_14_0, grammarAccess.getPreconditionResultAccess().getAndthenCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_14_0, 
        		"INT");
	    }

)
))?(	otherlv_15='tbdcount' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPreconditionResultAccess().getTbdcountKeyword_10_0());
    }
(
(
		lv_tbdCount_16_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_16_0, grammarAccess.getPreconditionResultAccess().getTbdCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_16_0, 
        		"INT");
	    }

)
))?(	otherlv_17='weight' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPreconditionResultAccess().getWeightKeyword_11_0());
    }
(
(
		lv_weight_18_0=RULE_INT
		{
			newLeafNode(lv_weight_18_0, grammarAccess.getPreconditionResultAccess().getWeightINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='message' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPreconditionResultAccess().getMessageKeyword_12_0());
    }
(
(
		lv_message_20_0=RULE_STRING
		{
			newLeafNode(lv_message_20_0, grammarAccess.getPreconditionResultAccess().getMessageSTRINGTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreconditionResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_20_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPreconditionResultAccess().getVerificationActivityResultVerificationExprParserRuleCall_13_0()); 
	    }
		lv_verificationActivityResult_21_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreconditionResultRule());
	        }
       		add(
       			$current, 
       			"verificationActivityResult",
        		lv_verificationActivityResult_21_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_22=']' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPreconditionResultAccess().getRightSquareBracketKeyword_14());
    }
)
;





// Entry rule entryRuleVerificationActivityResult
entryRuleVerificationActivityResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationActivityResultRule()); }
	 iv_ruleVerificationActivityResult=ruleVerificationActivityResult 
	 { $current=$iv_ruleVerificationActivityResult.current; } 
	 EOF 
;

// Rule VerificationActivityResult
ruleVerificationActivityResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='verification' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationActivityResultAccess().getVerificationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getVerificationActivityResultAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='for' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerificationActivityResultAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getTargetVerificationActivityCrossReference_3_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationActivityResultAccess().getLeftSquareBracketKeyword_4());
    }
(	otherlv_5='executionstate' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationActivityResultAccess().getExecutionstateKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getExecutionStateVerificationExecutionStateEnumRuleCall_5_1_0()); 
	    }
		lv_executionState_6_0=ruleVerificationExecutionState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityResultRule());
	        }
       		set(
       			$current, 
       			"executionState",
        		lv_executionState_6_0, 
        		"VerificationExecutionState");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_7='resultstate' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationActivityResultAccess().getResultstateKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getResultStateVerificationResultStateEnumRuleCall_7_0()); 
	    }
		lv_resultState_8_0=ruleVerificationResultState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityResultRule());
	        }
       		set(
       			$current, 
       			"resultState",
        		lv_resultState_8_0, 
        		"VerificationResultState");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='issues' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationActivityResultAccess().getIssuesKeyword_8_0());
    }
	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationActivityResultAccess().getLeftSquareBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getIssuesResultIssueParserRuleCall_8_2_0()); 
	    }
		lv_issues_11_0=ruleResultIssue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityResultRule());
	        }
       		add(
       			$current, 
       			"issues",
        		lv_issues_11_0, 
        		"ResultIssue");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationActivityResultAccess().getRightSquareBracketKeyword_8_3());
    }
)?(	otherlv_13='report' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationActivityResultAccess().getReportKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getResultReportResultReportCrossReference_9_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='successcount' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVerificationActivityResultAccess().getSuccesscountKeyword_10_0());
    }
(
(
		lv_successCount_16_0=RULE_INT
		{
			newLeafNode(lv_successCount_16_0, grammarAccess.getVerificationActivityResultAccess().getSuccessCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_16_0, 
        		"INT");
	    }

)
))?(	otherlv_17='failcount' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationActivityResultAccess().getFailcountKeyword_11_0());
    }
(
(
		lv_failCount_18_0=RULE_INT
		{
			newLeafNode(lv_failCount_18_0, grammarAccess.getVerificationActivityResultAccess().getFailCountINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_18_0, 
        		"INT");
	    }

)
))?(	otherlv_19='errorcount' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getVerificationActivityResultAccess().getErrorcountKeyword_12_0());
    }
(
(
		lv_errorCount_20_0=RULE_INT
		{
			newLeafNode(lv_errorCount_20_0, grammarAccess.getVerificationActivityResultAccess().getErrorCountINTTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_20_0, 
        		"INT");
	    }

)
))?(	otherlv_21='failthencount' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getVerificationActivityResultAccess().getFailthencountKeyword_13_0());
    }
(
(
		lv_failthenCount_22_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_22_0, grammarAccess.getVerificationActivityResultAccess().getFailthenCountINTTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_22_0, 
        		"INT");
	    }

)
))?(	otherlv_23='andthencount' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getVerificationActivityResultAccess().getAndthencountKeyword_14_0());
    }
(
(
		lv_andthenCount_24_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_24_0, grammarAccess.getVerificationActivityResultAccess().getAndthenCountINTTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_24_0, 
        		"INT");
	    }

)
))?(	otherlv_25='tbdcount' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getVerificationActivityResultAccess().getTbdcountKeyword_15_0());
    }
(
(
		lv_tbdCount_26_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_26_0, grammarAccess.getVerificationActivityResultAccess().getTbdCountINTTerminalRuleCall_15_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_26_0, 
        		"INT");
	    }

)
))?(	otherlv_27='weight' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getVerificationActivityResultAccess().getWeightKeyword_16_0());
    }
(
(
		lv_weight_28_0=RULE_INT
		{
			newLeafNode(lv_weight_28_0, grammarAccess.getVerificationActivityResultAccess().getWeightINTTerminalRuleCall_16_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_28_0, 
        		"INT");
	    }

)
))?(	otherlv_29='message' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getVerificationActivityResultAccess().getMessageKeyword_17_0());
    }
(
(
		lv_message_30_0=RULE_STRING
		{
			newLeafNode(lv_message_30_0, grammarAccess.getVerificationActivityResultAccess().getMessageSTRINGTerminalRuleCall_17_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_30_0, 
        		"STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getAssumptionResultAssumptionResultParserRuleCall_18_0()); 
	    }
		lv_assumptionResult_31_0=ruleAssumptionResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityResultRule());
	        }
       		add(
       			$current, 
       			"assumptionResult",
        		lv_assumptionResult_31_0, 
        		"AssumptionResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityResultAccess().getPreconditionResultPreconditionResultParserRuleCall_19_0()); 
	    }
		lv_preconditionResult_32_0=rulePreconditionResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityResultRule());
	        }
       		add(
       			$current, 
       			"preconditionResult",
        		lv_preconditionResult_32_0, 
        		"PreconditionResult");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_33=']' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getVerificationActivityResultAccess().getRightSquareBracketKeyword_20());
    }
)
;







// Entry rule entryRuleVerificationExpr
entryRuleVerificationExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationExprRule()); }
	 iv_ruleVerificationExpr=ruleVerificationExpr 
	 { $current=$iv_ruleVerificationExpr.current; } 
	 EOF 
;

// Rule VerificationExpr
ruleVerificationExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVerificationExprAccess().getVerificationActivityResultParserRuleCall_0()); 
    }
    this_VerificationActivityResult_0=ruleVerificationActivityResult
    { 
        $current = $this_VerificationActivityResult_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVerificationExprAccess().getFailThenResultParserRuleCall_1()); 
    }
    this_FailThenResult_1=ruleFailThenResult
    { 
        $current = $this_FailThenResult_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getVerificationExprAccess().getAndThenResultParserRuleCall_2()); 
    }
    this_AndThenResult_2=ruleAndThenResult
    { 
        $current = $this_AndThenResult_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFailThenResult
entryRuleFailThenResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFailThenResultRule()); }
	 iv_ruleFailThenResult=ruleFailThenResult 
	 { $current=$iv_ruleFailThenResult.current; } 
	 EOF 
;

// Rule FailThenResult
ruleFailThenResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='failthen' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFailThenResultAccess().getFailthenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFailThenResultAccess().getFirstVerificationExprParserRuleCall_1_0()); 
	    }
		lv_first_1_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFailThenResultRule());
	        }
       		add(
       			$current, 
       			"first",
        		lv_first_1_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='do' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFailThenResultAccess().getDoKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFailThenResultAccess().getSecondVerificationExprParserRuleCall_3_0()); 
	    }
		lv_second_3_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFailThenResultRule());
	        }
       		add(
       			$current, 
       			"second",
        		lv_second_3_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFailThenResultAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		lv_didFailThenFail_5_0=	'failthenfailed' 
    {
        newLeafNode(lv_didFailThenFail_5_0, grammarAccess.getFailThenResultAccess().getDidFailThenFailFailthenfailedKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed($current, "didFailThenFail", true, "failthenfailed");
	    }

)
)?(	otherlv_6='successcount' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFailThenResultAccess().getSuccesscountKeyword_6_0());
    }
(
(
		lv_successCount_7_0=RULE_INT
		{
			newLeafNode(lv_successCount_7_0, grammarAccess.getFailThenResultAccess().getSuccessCountINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_7_0, 
        		"INT");
	    }

)
))?(	otherlv_8='failcount' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFailThenResultAccess().getFailcountKeyword_7_0());
    }
(
(
		lv_failCount_9_0=RULE_INT
		{
			newLeafNode(lv_failCount_9_0, grammarAccess.getFailThenResultAccess().getFailCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_9_0, 
        		"INT");
	    }

)
))?(	otherlv_10='errorcount' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFailThenResultAccess().getErrorcountKeyword_8_0());
    }
(
(
		lv_errorCount_11_0=RULE_INT
		{
			newLeafNode(lv_errorCount_11_0, grammarAccess.getFailThenResultAccess().getErrorCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_11_0, 
        		"INT");
	    }

)
))?(	otherlv_12='failthencount' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFailThenResultAccess().getFailthencountKeyword_9_0());
    }
(
(
		lv_failthenCount_13_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_13_0, grammarAccess.getFailThenResultAccess().getFailthenCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_13_0, 
        		"INT");
	    }

)
))?(	otherlv_14='andthencount' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFailThenResultAccess().getAndthencountKeyword_10_0());
    }
(
(
		lv_andthenCount_15_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_15_0, grammarAccess.getFailThenResultAccess().getAndthenCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_15_0, 
        		"INT");
	    }

)
))?(	otherlv_16='tbdcount' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFailThenResultAccess().getTbdcountKeyword_11_0());
    }
(
(
		lv_tbdCount_17_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_17_0, grammarAccess.getFailThenResultAccess().getTbdCountINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_17_0, 
        		"INT");
	    }

)
))?(	otherlv_18='weight' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFailThenResultAccess().getWeightKeyword_12_0());
    }
(
(
		lv_weight_19_0=RULE_INT
		{
			newLeafNode(lv_weight_19_0, grammarAccess.getFailThenResultAccess().getWeightINTTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFailThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_19_0, 
        		"INT");
	    }

)
))?	otherlv_20=']' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getFailThenResultAccess().getRightSquareBracketKeyword_13());
    }
)
;





// Entry rule entryRuleAndThenResult
entryRuleAndThenResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndThenResultRule()); }
	 iv_ruleAndThenResult=ruleAndThenResult 
	 { $current=$iv_ruleAndThenResult.current; } 
	 EOF 
;

// Rule AndThenResult
ruleAndThenResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='andthen' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAndThenResultAccess().getAndthenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndThenResultAccess().getFirstVerificationExprParserRuleCall_1_0()); 
	    }
		lv_first_1_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndThenResultRule());
	        }
       		add(
       			$current, 
       			"first",
        		lv_first_1_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='do' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAndThenResultAccess().getDoKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndThenResultAccess().getSecondVerificationExprParserRuleCall_3_0()); 
	    }
		lv_second_3_0=ruleVerificationExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndThenResultRule());
	        }
       		add(
       			$current, 
       			"second",
        		lv_second_3_0, 
        		"VerificationExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='[' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAndThenResultAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		lv_didAndThenFail_5_0=	'andthenfailed' 
    {
        newLeafNode(lv_didAndThenFail_5_0, grammarAccess.getAndThenResultAccess().getDidAndThenFailAndthenfailedKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed($current, "didAndThenFail", true, "andthenfailed");
	    }

)
)?(	otherlv_6='successcount' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAndThenResultAccess().getSuccesscountKeyword_6_0());
    }
(
(
		lv_successCount_7_0=RULE_INT
		{
			newLeafNode(lv_successCount_7_0, grammarAccess.getAndThenResultAccess().getSuccessCountINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"successCount",
        		lv_successCount_7_0, 
        		"INT");
	    }

)
))?(	otherlv_8='failcount' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAndThenResultAccess().getFailcountKeyword_7_0());
    }
(
(
		lv_failCount_9_0=RULE_INT
		{
			newLeafNode(lv_failCount_9_0, grammarAccess.getAndThenResultAccess().getFailCountINTTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failCount",
        		lv_failCount_9_0, 
        		"INT");
	    }

)
))?(	otherlv_10='errorcount' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAndThenResultAccess().getErrorcountKeyword_8_0());
    }
(
(
		lv_errorCount_11_0=RULE_INT
		{
			newLeafNode(lv_errorCount_11_0, grammarAccess.getAndThenResultAccess().getErrorCountINTTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"errorCount",
        		lv_errorCount_11_0, 
        		"INT");
	    }

)
))?(	otherlv_12='failthencount' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAndThenResultAccess().getFailthencountKeyword_9_0());
    }
(
(
		lv_failthenCount_13_0=RULE_INT
		{
			newLeafNode(lv_failthenCount_13_0, grammarAccess.getAndThenResultAccess().getFailthenCountINTTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"failthenCount",
        		lv_failthenCount_13_0, 
        		"INT");
	    }

)
))?(	otherlv_14='andthencount' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAndThenResultAccess().getAndthencountKeyword_10_0());
    }
(
(
		lv_andthenCount_15_0=RULE_INT
		{
			newLeafNode(lv_andthenCount_15_0, grammarAccess.getAndThenResultAccess().getAndthenCountINTTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"andthenCount",
        		lv_andthenCount_15_0, 
        		"INT");
	    }

)
))?(	otherlv_16='tbdcount' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getAndThenResultAccess().getTbdcountKeyword_11_0());
    }
(
(
		lv_tbdCount_17_0=RULE_INT
		{
			newLeafNode(lv_tbdCount_17_0, grammarAccess.getAndThenResultAccess().getTbdCountINTTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tbdCount",
        		lv_tbdCount_17_0, 
        		"INT");
	    }

)
))?(	otherlv_18='weight' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getAndThenResultAccess().getWeightKeyword_12_0());
    }
(
(
		lv_weight_19_0=RULE_INT
		{
			newLeafNode(lv_weight_19_0, grammarAccess.getAndThenResultAccess().getWeightINTTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndThenResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"weight",
        		lv_weight_19_0, 
        		"INT");
	    }

)
))?	otherlv_20=']' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getAndThenResultAccess().getRightSquareBracketKeyword_13());
    }
)
;





// Entry rule entryRuleResultIssue
entryRuleResultIssue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResultIssueRule()); }
	 iv_ruleResultIssue=ruleResultIssue 
	 { $current=$iv_ruleResultIssue.current; } 
	 EOF 
;

// Rule ResultIssue
ruleResultIssue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getResultIssueAccess().getIssueTypeResultIssueTypeEnumRuleCall_0_0()); 
	    }
		lv_issueType_0_0=ruleResultIssueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultIssueRule());
	        }
       		set(
       			$current, 
       			"issueType",
        		lv_issueType_0_0, 
        		"ResultIssueType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getResultIssueAccess().getColonKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getResultIssueAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultIssueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))?(
(
		lv_message_3_0=RULE_STRING
		{
			newLeafNode(lv_message_3_0, grammarAccess.getResultIssueAccess().getMessageSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultIssueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_3_0, 
        		"STRING");
	    }

)
)(	otherlv_4='exception' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getResultIssueAccess().getExceptionKeyword_3_0());
    }
(
(
		lv_exceptionType_5_0=RULE_STRING
		{
			newLeafNode(lv_exceptionType_5_0, grammarAccess.getResultIssueAccess().getExceptionTypeSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultIssueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"exceptionType",
        		lv_exceptionType_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='target' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getResultIssueAccess().getTargetKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResultIssueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResultIssueAccess().getTargetEObjectCrossReference_4_1_0()); 
	    }
		ruleURIID		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getResultIssueAccess().getLeftSquareBracketKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getResultIssueAccess().getIssuesResultIssueParserRuleCall_5_1_0()); 
	    }
		lv_issues_9_0=ruleResultIssue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getResultIssueRule());
	        }
       		add(
       			$current, 
       			"issues",
        		lv_issues_9_0, 
        		"ResultIssue");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_10=']' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getResultIssueAccess().getRightSquareBracketKeyword_5_2());
    }
)?)
;







// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruleDescription=ruleDescription 
	 { $current=$iv_ruleDescription.current; } 
	 EOF 
;

// Rule Description
ruleDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); 
	    }
		lv_description_0_0=ruleDescriptionElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionRule());
	        }
       		add(
       			$current, 
       			"description",
        		lv_description_0_0, 
        		"DescriptionElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleDescriptionElement
entryRuleDescriptionElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionElementRule()); }
	 iv_ruleDescriptionElement=ruleDescriptionElement 
	 { $current=$iv_ruleDescriptionElement.current; } 
	 EOF 
;

// Rule DescriptionElement
ruleDescriptionElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_text_0_0=RULE_STRING
		{
			newLeafNode(lv_text_0_0, grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionElementAccess().getValueShowValueParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleShowValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionElementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ShowValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_newline_2_0=	'&' 
    {
        newLeafNode(lv_newline_2_0, grammarAccess.getDescriptionElementAccess().getNewlineAmpersandKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionElementRule());
	        }
       		setWithLastConsumed($current, "newline", true, "&");
	    }

)
)
    |(
(
		lv_thisTarget_3_0=	'this' 
    {
        newLeafNode(lv_thisTarget_3_0, grammarAccess.getDescriptionElementAccess().getThisTargetThisKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionElementRule());
	        }
       		setWithLastConsumed($current, "thisTarget", true, "this");
	    }

)
))
;





// Entry rule entryRuleShowValue
entryRuleShowValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShowValueRule()); }
	 iv_ruleShowValue=ruleShowValue 
	 { $current=$iv_ruleShowValue.current; } 
	 EOF 
;

// Rule ShowValue
ruleShowValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getShowValueRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getShowValueAccess().getRefConstantDeclCrossReference_0_0()); 
	}

)
)(	otherlv_1='%' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getShowValueAccess().getPercentSignKeyword_1_0());
    }
(
(
		lv_unit_2_0=RULE_ID
		{
			newLeafNode(lv_unit_2_0, grammarAccess.getShowValueAccess().getUnitIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShowValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_2_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleReferencePath
entryRuleReferencePath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferencePathRule()); }
	 iv_ruleReferencePath=ruleReferencePath 
	 { $current=$iv_ruleReferencePath.current; } 
	 EOF 
;

// Rule ReferencePath
ruleReferencePath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferencePathRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); 
	}

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); 
	    }
		lv_subpath_2_0=ruleReferencePath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferencePathRule());
	        }
       		set(
       			$current, 
       			"subpath",
        		lv_subpath_2_0, 
        		"ReferencePath");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;









// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstantValueAccess().getStringTermParserRuleCall_0()); 
    }
    this_StringTerm_0=ruleStringTerm
    { 
        $current = $this_StringTerm_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantValueAccess().getRealTermParserRuleCall_1()); 
    }
    this_RealTerm_1=ruleRealTerm
    { 
        $current = $this_RealTerm_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstantValueAccess().getIntegerTermParserRuleCall_2()); 
    }
    this_IntegerTerm_2=ruleIntegerTerm
    { 
        $current = $this_IntegerTerm_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringTerm
entryRuleStringTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTermRule()); }
	 iv_ruleStringTerm=ruleStringTerm 
	 { $current=$iv_ruleStringTerm.current; } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringTermAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleRealTerm
entryRuleRealTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealTermRule()); }
	 iv_ruleRealTerm=ruleRealTerm 
	 { $current=$iv_ruleRealTerm.current; } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRealTermAccess().getValueREALParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleREAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"REAL");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_unit_1_0=RULE_ID
		{
			newLeafNode(lv_unit_1_0, grammarAccess.getRealTermAccess().getUnitIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_1_0, 
        		"ID");
	    }

)
)?)
;





// Entry rule entryRuleREAL
entryRuleREAL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getREALRule()); } 
	 iv_ruleREAL=ruleREAL 
	 { $current=$iv_ruleREAL.current.getText(); }  
	 EOF 
;

// Rule REAL
ruleREAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getREALAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerTermRule()); }
	 iv_ruleIntegerTerm=ruleIntegerTerm 
	 { $current=$iv_ruleIntegerTerm.current; } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_INT
		{
			newLeafNode(lv_value_0_0, grammarAccess.getIntegerTermAccess().getValueINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"INT");
	    }

)
)(
(
		lv_unit_1_0=RULE_ID
		{
			newLeafNode(lv_unit_1_0, grammarAccess.getIntegerTermAccess().getUnitIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unit",
        		lv_unit_1_0, 
        		"ID");
	    }

)
)?)
;







// Entry rule entryRuleTextElement
entryRuleTextElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextElementRule()); }
	 iv_ruleTextElement=ruleTextElement 
	 { $current=$iv_ruleTextElement.current; } 
	 EOF 
;

// Rule TextElement
ruleTextElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_text_0_0=RULE_STRING
		{
			newLeafNode(lv_text_0_0, grammarAccess.getTextElementAccess().getTextSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_newline_1_0=	'&' 
    {
        newLeafNode(lv_newline_1_0, grammarAccess.getTextElementAccess().getNewlineAmpersandKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextElementRule());
	        }
       		setWithLastConsumed($current, "newline", true, "&");
	    }

)
))
;







// Entry rule entryRuleAadlClassifierReference
entryRuleAadlClassifierReference returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAadlClassifierReferenceRule()); } 
	 iv_ruleAadlClassifierReference=ruleAadlClassifierReference 
	 { $current=$iv_ruleAadlClassifierReference.current.getText(); }  
	 EOF 
;

// Rule AadlClassifierReference
ruleAadlClassifierReference returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw='::' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAadlClassifierReferenceAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getAadlClassifierReferenceAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleURIID
entryRuleURIID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getURIIDRule()); } 
	 iv_ruleURIID=ruleURIID 
	 { $current=$iv_ruleURIID.current.getText(); }  
	 EOF 
;

// Rule URIID
ruleURIID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getURIIDAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Rule ResultIssueType
ruleResultIssueType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='error' 
	{
        $current = grammarAccess.getResultIssueTypeAccess().getERROREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getResultIssueTypeAccess().getERROREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='warning' 
	{
        $current = grammarAccess.getResultIssueTypeAccess().getWARNINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getResultIssueTypeAccess().getWARNINGEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='success' 
	{
        $current = grammarAccess.getResultIssueTypeAccess().getSUCCESSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getResultIssueTypeAccess().getSUCCESSEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='info' 
	{
        $current = grammarAccess.getResultIssueTypeAccess().getINFOEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getResultIssueTypeAccess().getINFOEnumLiteralDeclaration_3()); 
    }
));



// Rule VerificationResultState
ruleVerificationResultState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='tbd' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getTBDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStateAccess().getTBDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='success' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getSUCCESSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStateAccess().getSUCCESSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='fail' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getFAILEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStateAccess().getFAILEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='error' 
	{
        $current = grammarAccess.getVerificationResultStateAccess().getERROREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVerificationResultStateAccess().getERROREnumLiteralDeclaration_3()); 
    }
));



// Rule VerificationExecutionState
ruleVerificationExecutionState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='todo' 
	{
        $current = grammarAccess.getVerificationExecutionStateAccess().getTODOEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationExecutionStateAccess().getTODOEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='running' 
	{
        $current = grammarAccess.getVerificationExecutionStateAccess().getRUNNINGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationExecutionStateAccess().getRUNNINGEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='redo' 
	{
        $current = grammarAccess.getVerificationExecutionStateAccess().getREDOEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationExecutionStateAccess().getREDOEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='completed' 
	{
        $current = grammarAccess.getVerificationExecutionStateAccess().getCOMPLETEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getVerificationExecutionStateAccess().getCOMPLETEDEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


