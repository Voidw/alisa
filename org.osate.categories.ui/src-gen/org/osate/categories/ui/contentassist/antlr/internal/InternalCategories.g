/*
* generated by Xtext
*/
grammar InternalCategories;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.osate.categories.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.osate.categories.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.categories.services.CategoriesGrammarAccess;

}

@parser::members {
 
 	private CategoriesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CategoriesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleCategories
entryRuleCategories 
:
{ before(grammarAccess.getCategoriesRule()); }
	 ruleCategories
{ after(grammarAccess.getCategoriesRule()); } 
	 EOF 
;

// Rule Categories
ruleCategories
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCategoriesAccess().getAlternatives()); }
(rule__Categories__Alternatives)
{ after(grammarAccess.getCategoriesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirementCategories
entryRuleRequirementCategories 
:
{ before(grammarAccess.getRequirementCategoriesRule()); }
	 ruleRequirementCategories
{ after(grammarAccess.getRequirementCategoriesRule()); } 
	 EOF 
;

// Rule RequirementCategories
ruleRequirementCategories
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getGroup()); }
(rule__RequirementCategories__Group__0)
{ after(grammarAccess.getRequirementCategoriesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardCategories
entryRuleHazardCategories 
:
{ before(grammarAccess.getHazardCategoriesRule()); }
	 ruleHazardCategories
{ after(grammarAccess.getHazardCategoriesRule()); } 
	 EOF 
;

// Rule HazardCategories
ruleHazardCategories
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardCategoriesAccess().getGroup()); }
(rule__HazardCategories__Group__0)
{ after(grammarAccess.getHazardCategoriesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationCategories
entryRuleVerificationCategories 
:
{ before(grammarAccess.getVerificationCategoriesRule()); }
	 ruleVerificationCategories
{ after(grammarAccess.getVerificationCategoriesRule()); } 
	 EOF 
;

// Rule VerificationCategories
ruleVerificationCategories
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getGroup()); }
(rule__VerificationCategories__Group__0)
{ after(grammarAccess.getVerificationCategoriesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirementCategory
entryRuleRequirementCategory 
:
{ before(grammarAccess.getRequirementCategoryRule()); }
	 ruleRequirementCategory
{ after(grammarAccess.getRequirementCategoryRule()); } 
	 EOF 
;

// Rule RequirementCategory
ruleRequirementCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRequirementCategoryAccess().getGroup()); }
(rule__RequirementCategory__Group__0)
{ after(grammarAccess.getRequirementCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHazardCategory
entryRuleHazardCategory 
:
{ before(grammarAccess.getHazardCategoryRule()); }
	 ruleHazardCategory
{ after(grammarAccess.getHazardCategoryRule()); } 
	 EOF 
;

// Rule HazardCategory
ruleHazardCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHazardCategoryAccess().getGroup()); }
(rule__HazardCategory__Group__0)
{ after(grammarAccess.getHazardCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationCategory
entryRuleVerificationCategory 
:
{ before(grammarAccess.getVerificationCategoryRule()); }
	 ruleVerificationCategory
{ after(grammarAccess.getVerificationCategoryRule()); } 
	 EOF 
;

// Rule VerificationCategory
ruleVerificationCategory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerificationCategoryAccess().getGroup()); }
(rule__VerificationCategory__Group__0)
{ after(grammarAccess.getVerificationCategoryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDescription
entryRuleDescription 
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
(rule__Description__DescriptionAssignment)
{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
)
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
(rule__Description__DescriptionAssignment)*
{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescriptionElement
entryRuleDescriptionElement 
:
{ before(grammarAccess.getDescriptionElementRule()); }
	 ruleDescriptionElement
{ after(grammarAccess.getDescriptionElementRule()); } 
	 EOF 
;

// Rule DescriptionElement
ruleDescriptionElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionElementAccess().getAlternatives()); }
(rule__DescriptionElement__Alternatives)
{ after(grammarAccess.getDescriptionElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferencePath
entryRuleReferencePath 
:
{ before(grammarAccess.getReferencePathRule()); }
	 ruleReferencePath
{ after(grammarAccess.getReferencePathRule()); } 
	 EOF 
;

// Rule ReferencePath
ruleReferencePath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferencePathAccess().getGroup()); }
(rule__ReferencePath__Group__0)
{ after(grammarAccess.getReferencePathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleCATREF
entryRuleCATREF 
:
{ before(grammarAccess.getCATREFRule()); }
	 ruleCATREF
{ after(grammarAccess.getCATREFRule()); } 
	 EOF 
;

// Rule CATREF
ruleCATREF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCATREFAccess().getGroup()); }
(rule__CATREF__Group__0)
{ after(grammarAccess.getCATREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Categories__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCategoriesAccess().getRequirementCategoriesParserRuleCall_0()); }
	ruleRequirementCategories
{ after(grammarAccess.getCategoriesAccess().getRequirementCategoriesParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCategoriesAccess().getHazardCategoriesParserRuleCall_1()); }
	ruleHazardCategories
{ after(grammarAccess.getCategoriesAccess().getHazardCategoriesParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCategoriesAccess().getVerificationCategoriesParserRuleCall_2()); }
	ruleVerificationCategories
{ after(grammarAccess.getCategoriesAccess().getVerificationCategoriesParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getTextAssignment_0()); }
(rule__DescriptionElement__TextAssignment_0)
{ after(grammarAccess.getDescriptionElementAccess().getTextAssignment_0()); }
)

    |(
{ before(grammarAccess.getDescriptionElementAccess().getRefAssignment_1()); }
(rule__DescriptionElement__RefAssignment_1)
{ after(grammarAccess.getDescriptionElementAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RequirementCategories__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__0__Impl
	rule__RequirementCategories__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getRequirementKeyword_0()); }

	'requirement' 

{ after(grammarAccess.getRequirementCategoriesAccess().getRequirementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategories__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__1__Impl
	rule__RequirementCategories__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getCategoriesKeyword_1()); }

	'categories' 

{ after(grammarAccess.getRequirementCategoriesAccess().getCategoriesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategories__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__2__Impl
	rule__RequirementCategories__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getNameAssignment_2()); }
(rule__RequirementCategories__NameAssignment_2)
{ after(grammarAccess.getRequirementCategoriesAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategories__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__3__Impl
	rule__RequirementCategories__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getRequirementCategoriesAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategories__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__4__Impl
	rule__RequirementCategories__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRequirementCategoriesAccess().getCategoryAssignment_4()); }
(rule__RequirementCategories__CategoryAssignment_4)
{ after(grammarAccess.getRequirementCategoriesAccess().getCategoryAssignment_4()); }
)
(
{ before(grammarAccess.getRequirementCategoriesAccess().getCategoryAssignment_4()); }
(rule__RequirementCategories__CategoryAssignment_4)*
{ after(grammarAccess.getRequirementCategoriesAccess().getCategoryAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategories__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategories__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getRequirementCategoriesAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__HazardCategories__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__0__Impl
	rule__HazardCategories__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getHazardKeyword_0()); }

	'hazard' 

{ after(grammarAccess.getHazardCategoriesAccess().getHazardKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategories__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__1__Impl
	rule__HazardCategories__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getCategoriesKeyword_1()); }

	'categories' 

{ after(grammarAccess.getHazardCategoriesAccess().getCategoriesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategories__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__2__Impl
	rule__HazardCategories__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getNameAssignment_2()); }
(rule__HazardCategories__NameAssignment_2)
{ after(grammarAccess.getHazardCategoriesAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategories__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__3__Impl
	rule__HazardCategories__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getHazardCategoriesAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategories__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__4__Impl
	rule__HazardCategories__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHazardCategoriesAccess().getCategoryAssignment_4()); }
(rule__HazardCategories__CategoryAssignment_4)
{ after(grammarAccess.getHazardCategoriesAccess().getCategoryAssignment_4()); }
)
(
{ before(grammarAccess.getHazardCategoriesAccess().getCategoryAssignment_4()); }
(rule__HazardCategories__CategoryAssignment_4)*
{ after(grammarAccess.getHazardCategoriesAccess().getCategoryAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategories__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategories__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getHazardCategoriesAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VerificationCategories__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__0__Impl
	rule__VerificationCategories__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getVerificationKeyword_0()); }

	'Verification' 

{ after(grammarAccess.getVerificationCategoriesAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategories__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__1__Impl
	rule__VerificationCategories__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getCategoriesKeyword_1()); }

	'categories' 

{ after(grammarAccess.getVerificationCategoriesAccess().getCategoriesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategories__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__2__Impl
	rule__VerificationCategories__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getNameAssignment_2()); }
(rule__VerificationCategories__NameAssignment_2)
{ after(grammarAccess.getVerificationCategoriesAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategories__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__3__Impl
	rule__VerificationCategories__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getVerificationCategoriesAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategories__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__4__Impl
	rule__VerificationCategories__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVerificationCategoriesAccess().getCategoryAssignment_4()); }
(rule__VerificationCategories__CategoryAssignment_4)
{ after(grammarAccess.getVerificationCategoriesAccess().getCategoryAssignment_4()); }
)
(
{ before(grammarAccess.getVerificationCategoriesAccess().getCategoryAssignment_4()); }
(rule__VerificationCategories__CategoryAssignment_4)*
{ after(grammarAccess.getVerificationCategoriesAccess().getCategoryAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategories__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategories__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getVerificationCategoriesAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RequirementCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategory__Group__0__Impl
	rule__RequirementCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getCategoryKeyword_0()); }

	'category' 

{ after(grammarAccess.getRequirementCategoryAccess().getCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategory__Group__1__Impl
	rule__RequirementCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getNameAssignment_1()); }
(rule__RequirementCategory__NameAssignment_1)
{ after(grammarAccess.getRequirementCategoryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategory__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getGroup_2()); }
(rule__RequirementCategory__Group_2__0)?
{ after(grammarAccess.getRequirementCategoryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RequirementCategory__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategory__Group_2__0__Impl
	rule__RequirementCategory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getRequirementCategoryAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementCategory__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementCategory__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getExtendsAssignment_2_1()); }
(rule__RequirementCategory__ExtendsAssignment_2_1)
{ after(grammarAccess.getRequirementCategoryAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HazardCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategory__Group__0__Impl
	rule__HazardCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getCategoryKeyword_0()); }

	'category' 

{ after(grammarAccess.getHazardCategoryAccess().getCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategory__Group__1__Impl
	rule__HazardCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getNameAssignment_1()); }
(rule__HazardCategory__NameAssignment_1)
{ after(grammarAccess.getHazardCategoryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategory__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getGroup_2()); }
(rule__HazardCategory__Group_2__0)?
{ after(grammarAccess.getHazardCategoryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HazardCategory__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategory__Group_2__0__Impl
	rule__HazardCategory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getHazardCategoryAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HazardCategory__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HazardCategory__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getExtendsAssignment_2_1()); }
(rule__HazardCategory__ExtendsAssignment_2_1)
{ after(grammarAccess.getHazardCategoryAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationCategory__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategory__Group__0__Impl
	rule__VerificationCategory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getCategoryKeyword_0()); }

	'category' 

{ after(grammarAccess.getVerificationCategoryAccess().getCategoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategory__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategory__Group__1__Impl
	rule__VerificationCategory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getNameAssignment_1()); }
(rule__VerificationCategory__NameAssignment_1)
{ after(grammarAccess.getVerificationCategoryAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategory__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategory__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getGroup_2()); }
(rule__VerificationCategory__Group_2__0)?
{ after(grammarAccess.getVerificationCategoryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationCategory__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategory__Group_2__0__Impl
	rule__VerificationCategory__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getVerificationCategoryAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationCategory__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationCategory__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getExtendsAssignment_2_1()); }
(rule__VerificationCategory__ExtendsAssignment_2_1)
{ after(grammarAccess.getVerificationCategoryAccess().getExtendsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferencePath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group__0__Impl
	rule__ReferencePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getRefAssignment_0()); }
(rule__ReferencePath__RefAssignment_0)
{ after(grammarAccess.getReferencePathAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getGroup_1()); }
(rule__ReferencePath__Group_1__0)
{ after(grammarAccess.getReferencePathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferencePath__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group_1__0__Impl
	rule__ReferencePath__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePath__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getSubpathAssignment_1_1()); }
(rule__ReferencePath__SubpathAssignment_1_1)
{ after(grammarAccess.getReferencePathAccess().getSubpathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__CATREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group__0__Impl
	rule__CATREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CATREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getGroup_1()); }
(rule__CATREF__Group_1__0)?
{ after(grammarAccess.getCATREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CATREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group_1__0__Impl
	rule__CATREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getCATREFAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CATREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RequirementCategories__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getRequirementCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategories__CategoryAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoriesAccess().getCategoryRequirementCategoryParserRuleCall_4_0()); }
	ruleRequirementCategory{ after(grammarAccess.getRequirementCategoriesAccess().getCategoryRequirementCategoryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getHazardCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategories__CategoryAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoriesAccess().getCategoryHazardCategoryParserRuleCall_4_0()); }
	ruleHazardCategory{ after(grammarAccess.getHazardCategoriesAccess().getCategoryHazardCategoryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationCategoriesAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategories__CategoryAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoriesAccess().getCategoryVerificationCategoryParserRuleCall_4_0()); }
	ruleVerificationCategory{ after(grammarAccess.getVerificationCategoriesAccess().getCategoryVerificationCategoryParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRequirementCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementCategory__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementCategoryAccess().getExtendsRequirementCategoryCrossReference_2_1_0()); }
(
{ before(grammarAccess.getRequirementCategoryAccess().getExtendsRequirementCategoryCATREFParserRuleCall_2_1_0_1()); }
	ruleCATREF{ after(grammarAccess.getRequirementCategoryAccess().getExtendsRequirementCategoryCATREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getRequirementCategoryAccess().getExtendsRequirementCategoryCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getHazardCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HazardCategory__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHazardCategoryAccess().getExtendsHazardCategoryCrossReference_2_1_0()); }
(
{ before(grammarAccess.getHazardCategoryAccess().getExtendsHazardCategoryCATREFParserRuleCall_2_1_0_1()); }
	ruleCATREF{ after(grammarAccess.getHazardCategoryAccess().getExtendsHazardCategoryCATREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getHazardCategoryAccess().getExtendsHazardCategoryCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVerificationCategoryAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationCategory__ExtendsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationCategoryAccess().getExtendsVerificationCategoryCrossReference_2_1_0()); }
(
{ before(grammarAccess.getVerificationCategoryAccess().getExtendsVerificationCategoryCATREFParserRuleCall_2_1_0_1()); }
	ruleCATREF{ after(grammarAccess.getVerificationCategoryAccess().getExtendsVerificationCategoryCATREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getVerificationCategoryAccess().getExtendsVerificationCategoryCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__DescriptionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); }
	ruleDescriptionElement{ after(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__TextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getRefEObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getDescriptionElementAccess().getRefEObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDescriptionElementAccess().getRefEObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDescriptionElementAccess().getRefEObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getReferencePathAccess().getRefEObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReferencePathAccess().getRefEObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__SubpathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); }
	ruleReferencePath{ after(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


