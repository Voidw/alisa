/*
* generated by Xtext
*/
package org.osate.assure.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.osate.assure.services.AssureGrammarAccess;

public class AssureParser extends AbstractContentAssistParser {
	
	@Inject
	private AssureGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.osate.assure.ui.contentassist.antlr.internal.InternalAssureParser createParser() {
		org.osate.assure.ui.contentassist.antlr.internal.InternalAssureParser result = new org.osate.assure.ui.contentassist.antlr.internal.InternalAssureParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAssuranceResultAccess().getAlternatives(), "rule__AssuranceResult__Alternatives");
					put(grammarAccess.getVerificationResultStateAccess().getAlternatives(), "rule__VerificationResultState__Alternatives");
					put(grammarAccess.getVerificationResultStatusAccess().getAlternatives(), "rule__VerificationResultStatus__Alternatives");
					put(grammarAccess.getCaseResultAccess().getGroup(), "rule__CaseResult__Group__0");
					put(grammarAccess.getVerificationResultAccess().getGroup(), "rule__VerificationResult__Group__0");
					put(grammarAccess.getVerificationResultAccess().getGroup_7_0(), "rule__VerificationResult__Group_7_0__0");
					put(grammarAccess.getVerificationResultAccess().getGroup_7_1(), "rule__VerificationResult__Group_7_1__0");
					put(grammarAccess.getVerificationResultAccess().getGroup_7_2(), "rule__VerificationResult__Group_7_2__0");
					put(grammarAccess.getVerificationResultAccess().getGroup_7_3(), "rule__VerificationResult__Group_7_3__0");
					put(grammarAccess.getVerificationResultAccess().getGroup_7_4(), "rule__VerificationResult__Group_7_4__0");
					put(grammarAccess.getClaimResultAccess().getGroup(), "rule__ClaimResult__Group__0");
					put(grammarAccess.getAggregateResultDataAccess().getGroup(), "rule__AggregateResultData__Group__0");
					put(grammarAccess.getAggregateResultDataAccess().getGroup_0(), "rule__AggregateResultData__Group_0__0");
					put(grammarAccess.getAggregateResultDataAccess().getGroup_1(), "rule__AggregateResultData__Group_1__0");
					put(grammarAccess.getAggregateResultDataAccess().getGroup_2(), "rule__AggregateResultData__Group_2__0");
					put(grammarAccess.getAggregateResultDataAccess().getGroup_3(), "rule__AggregateResultData__Group_3__0");
					put(grammarAccess.getCaseResultAccess().getNameAssignment_1(), "rule__CaseResult__NameAssignment_1");
					put(grammarAccess.getCaseResultAccess().getTargetAssignment_3(), "rule__CaseResult__TargetAssignment_3");
					put(grammarAccess.getCaseResultAccess().getResultAssignment_5(), "rule__CaseResult__ResultAssignment_5");
					put(grammarAccess.getCaseResultAccess().getSubCaseResultAssignment_6(), "rule__CaseResult__SubCaseResultAssignment_6");
					put(grammarAccess.getCaseResultAccess().getClaimResultAssignment_7(), "rule__CaseResult__ClaimResultAssignment_7");
					put(grammarAccess.getVerificationResultAccess().getNameAssignment_1(), "rule__VerificationResult__NameAssignment_1");
					put(grammarAccess.getVerificationResultAccess().getVerificationActivityAssignment_3(), "rule__VerificationResult__VerificationActivityAssignment_3");
					put(grammarAccess.getVerificationResultAccess().getTargetAssignment_5(), "rule__VerificationResult__TargetAssignment_5");
					put(grammarAccess.getVerificationResultAccess().getTitleAssignment_7_0_1(), "rule__VerificationResult__TitleAssignment_7_0_1");
					put(grammarAccess.getVerificationResultAccess().getDescriptionAssignment_7_1_1(), "rule__VerificationResult__DescriptionAssignment_7_1_1");
					put(grammarAccess.getVerificationResultAccess().getDateAssignment_7_2_1(), "rule__VerificationResult__DateAssignment_7_2_1");
					put(grammarAccess.getVerificationResultAccess().getStateAssignment_7_3_1(), "rule__VerificationResult__StateAssignment_7_3_1");
					put(grammarAccess.getVerificationResultAccess().getStatusAssignment_7_4_1(), "rule__VerificationResult__StatusAssignment_7_4_1");
					put(grammarAccess.getVerificationResultAccess().getAssumptionVerificationResultAssignment_8(), "rule__VerificationResult__AssumptionVerificationResultAssignment_8");
					put(grammarAccess.getClaimResultAccess().getNameAssignment_1(), "rule__ClaimResult__NameAssignment_1");
					put(grammarAccess.getClaimResultAccess().getRequirementAssignment_3(), "rule__ClaimResult__RequirementAssignment_3");
					put(grammarAccess.getClaimResultAccess().getTargetAssignment_5(), "rule__ClaimResult__TargetAssignment_5");
					put(grammarAccess.getClaimResultAccess().getResultAssignment_7(), "rule__ClaimResult__ResultAssignment_7");
					put(grammarAccess.getClaimResultAccess().getSubClaimResultAssignment_8(), "rule__ClaimResult__SubClaimResultAssignment_8");
					put(grammarAccess.getClaimResultAccess().getVerificationResultAssignment_9(), "rule__ClaimResult__VerificationResultAssignment_9");
					put(grammarAccess.getAggregateResultDataAccess().getPassCountAssignment_0_1(), "rule__AggregateResultData__PassCountAssignment_0_1");
					put(grammarAccess.getAggregateResultDataAccess().getFailCountAssignment_1_1(), "rule__AggregateResultData__FailCountAssignment_1_1");
					put(grammarAccess.getAggregateResultDataAccess().getNeutralCountAssignment_2_1(), "rule__AggregateResultData__NeutralCountAssignment_2_1");
					put(grammarAccess.getAggregateResultDataAccess().getUnknownCountAssignment_3_1(), "rule__AggregateResultData__UnknownCountAssignment_3_1");
					put(grammarAccess.getVerificationResultAccess().getUnorderedGroup_7(), "rule__VerificationResult__UnorderedGroup_7");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.osate.assure.ui.contentassist.antlr.internal.InternalAssureParser typedParser = (org.osate.assure.ui.contentassist.antlr.internal.InternalAssureParser) parser;
			typedParser.entryRuleCaseResult();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AssureGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AssureGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
