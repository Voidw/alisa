grammar org.osate.results.Results with org.eclipse.xtext.common.Terminals

generate results "http://www.osate.org/results/Results"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// Collection of reports for an instance model (root), e.g., for colelction of end to end flows
ResultReport:
	'report' name=ID (':' title=STRING)?
	'['
	'root' root=[ecore::EObject|URIID] // system instance or other root object
	('description' decription=STRING)?
	('heading' heading=STRING
	content+=ResultReportEntry*)?
	('data' resultData=ResultData)?
//	'issues' issue+=ReportIssue*
	']'
;

// one report of an analysis for one item in the instance model.
// it may be a report per SOM or per end to end flow
// result represents the result data that can be queried
ResultReportEntry:
	'entry' name=ID (':' title=STRING)?
	'['
	'target' target=[ecore::EObject|URIID] // system instance or other root object
	('description' decription=STRING)?
	('heading' heading=STRING)?
	('result' resultData=ResultData)?
	('issues' issue+=ReportIssue*)?
	 ('[' row+=ResultContributor+ ']')?
	']'
;

// one row to represent a contributor to the result calculation.
// this structure can be nested
// each contributor can have issues reported
// user may dfine a subclass of this to add analysis specific data representations
ResultContributor:
	'contributor' contributor=[ecore::EObject|URIID] // instance model element or declarative model element
	'data' cell+=STRING+ 
	('issues' issue+=ReportIssue*)?
	('[' subcontributor+=ResultContributor* ']')?
;

// This is similar to diagnostics
ReportIssue:
	issueType=ReportIssueType
	title=STRING
	target=[ecore::EObject|URIID]
;

ResultData:
	data+=NameValuePair+
;

NameValuePair:
	name=ID '=' value=STRING
;

enum ReportIssueType:
	ERROR='error' | WARNING='warning'| SUCCESS='success' | INFO='info'
;

URIID: STRING;

//terminal URIID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'#'|'@'|'/'|':')*;

