/*
* generated by Xtext
*/
package org.osate.verify.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.osate.verify.services.VerifyGrammarAccess;

public class VerifyParser extends AbstractContentAssistParser {
	
	@Inject
	private VerifyGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.osate.verify.ui.contentassist.antlr.internal.InternalVerifyParser createParser() {
		org.osate.verify.ui.contentassist.antlr.internal.InternalVerifyParser result = new org.osate.verify.ui.contentassist.antlr.internal.InternalVerifyParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getVerificationAccess().getContentsAlternatives_0(), "rule__Verification__ContentsAlternatives_0");
					put(grammarAccess.getVerificationLibraryAccess().getContentAlternatives_4_0(), "rule__VerificationLibrary__ContentAlternatives_4_0");
					put(grammarAccess.getVerificationFolderAccess().getContentAlternatives_4_0(), "rule__VerificationFolder__ContentAlternatives_4_0");
					put(grammarAccess.getVerificationContainerAccess().getAlternatives(), "rule__VerificationContainer__Alternatives");
					put(grammarAccess.getVerificationConditionAccess().getAlternatives_0(), "rule__VerificationCondition__Alternatives_0");
					put(grammarAccess.getAtomicEvidenceExprAccess().getAlternatives(), "rule__AtomicEvidenceExpr__Alternatives");
					put(grammarAccess.getDescriptionElementAccess().getAlternatives(), "rule__DescriptionElement__Alternatives");
					put(grammarAccess.getPredicateExpressionAccess().getOpAlternatives_1_0(), "rule__PredicateExpression__OpAlternatives_1_0");
					put(grammarAccess.getSupportedTypesAccess().getAlternatives(), "rule__SupportedTypes__Alternatives");
					put(grammarAccess.getIssueTypeAccess().getAlternatives(), "rule__IssueType__Alternatives");
					put(grammarAccess.getVerificationPlanAccess().getGroup(), "rule__VerificationPlan__Group__0");
					put(grammarAccess.getVerificationPlanAccess().getGroup_5(), "rule__VerificationPlan__Group_5__0");
					put(grammarAccess.getVerificationLibraryAccess().getGroup(), "rule__VerificationLibrary__Group__0");
					put(grammarAccess.getVerificationLibraryAccess().getGroup_2(), "rule__VerificationLibrary__Group_2__0");
					put(grammarAccess.getVerificationFolderAccess().getGroup(), "rule__VerificationFolder__Group__0");
					put(grammarAccess.getVerificationFolderAccess().getGroup_2(), "rule__VerificationFolder__Group_2__0");
					put(grammarAccess.getClaimAccess().getGroup(), "rule__Claim__Group__0");
					put(grammarAccess.getClaimAccess().getGroup_6(), "rule__Claim__Group_6__0");
					put(grammarAccess.getClaimAccess().getGroup_7(), "rule__Claim__Group_7__0");
					put(grammarAccess.getVerificationActivityAccess().getGroup(), "rule__VerificationActivity__Group__0");
					put(grammarAccess.getVerificationActivityAccess().getGroup_5_0(), "rule__VerificationActivity__Group_5_0__0");
					put(grammarAccess.getVerificationActivityAccess().getGroup_5_1(), "rule__VerificationActivity__Group_5_1__0");
					put(grammarAccess.getVerificationActivityAccess().getGroup_5_2(), "rule__VerificationActivity__Group_5_2__0");
					put(grammarAccess.getVerificationActivityAccess().getGroup_5_3(), "rule__VerificationActivity__Group_5_3__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup(), "rule__VerificationCondition__Group__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_0_0(), "rule__VerificationCondition__Group_0_0__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_0_1(), "rule__VerificationCondition__Group_0_1__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_0(), "rule__VerificationCondition__Group_3_0__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_1(), "rule__VerificationCondition__Group_3_1__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_2(), "rule__VerificationCondition__Group_3_2__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_3(), "rule__VerificationCondition__Group_3_3__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_4(), "rule__VerificationCondition__Group_3_4__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_5(), "rule__VerificationCondition__Group_3_5__0");
					put(grammarAccess.getVerificationConditionAccess().getGroup_3_5_2(), "rule__VerificationCondition__Group_3_5_2__0");
					put(grammarAccess.getAllEvidenceExprAccess().getGroup(), "rule__AllEvidenceExpr__Group__0");
					put(grammarAccess.getAllEvidenceExprAccess().getGroup_4(), "rule__AllEvidenceExpr__Group_4__0");
					put(grammarAccess.getAndThenEvidenceExprAccess().getGroup(), "rule__AndThenEvidenceExpr__Group__0");
					put(grammarAccess.getAndThenEvidenceExprAccess().getGroup_1(), "rule__AndThenEvidenceExpr__Group_1__0");
					put(grammarAccess.getAndThenEvidenceExprAccess().getGroup_1_0(), "rule__AndThenEvidenceExpr__Group_1_0__0");
					put(grammarAccess.getAndThenEvidenceExprAccess().getGroup_1_0_0(), "rule__AndThenEvidenceExpr__Group_1_0_0__0");
					put(grammarAccess.getFailThenEvidenceExprAccess().getGroup(), "rule__FailThenEvidenceExpr__Group__0");
					put(grammarAccess.getFailThenEvidenceExprAccess().getGroup_1(), "rule__FailThenEvidenceExpr__Group_1__0");
					put(grammarAccess.getFailThenEvidenceExprAccess().getGroup_1_0(), "rule__FailThenEvidenceExpr__Group_1_0__0");
					put(grammarAccess.getFailThenEvidenceExprAccess().getGroup_1_0_0(), "rule__FailThenEvidenceExpr__Group_1_0_0__0");
					put(grammarAccess.getAtomicEvidenceExprAccess().getGroup_1(), "rule__AtomicEvidenceExpr__Group_1__0");
					put(grammarAccess.getConditionalEvidenceAccess().getGroup(), "rule__ConditionalEvidence__Group__0");
					put(grammarAccess.getConditionalEvidenceAccess().getGroup_1(), "rule__ConditionalEvidence__Group_1__0");
					put(grammarAccess.getConditionalEvidenceAccess().getGroup_1_0(), "rule__ConditionalEvidence__Group_1_0__0");
					put(grammarAccess.getConditionalEvidenceAccess().getGroup_1_0_0(), "rule__ConditionalEvidence__Group_1_0_0__0");
					put(grammarAccess.getVAReferenceAccess().getGroup(), "rule__VAReference__Group__0");
					put(grammarAccess.getVAReferenceAccess().getGroup_2(), "rule__VAReference__Group_2__0");
					put(grammarAccess.getOrConditionExprAccess().getGroup(), "rule__OrConditionExpr__Group__0");
					put(grammarAccess.getOrConditionExprAccess().getGroup_1(), "rule__OrConditionExpr__Group_1__0");
					put(grammarAccess.getOrConditionExprAccess().getGroup_1_0(), "rule__OrConditionExpr__Group_1_0__0");
					put(grammarAccess.getOrConditionExprAccess().getGroup_1_0_0(), "rule__OrConditionExpr__Group_1_0_0__0");
					put(grammarAccess.getAndConditionExprAccess().getGroup(), "rule__AndConditionExpr__Group__0");
					put(grammarAccess.getAndConditionExprAccess().getGroup_1(), "rule__AndConditionExpr__Group_1__0");
					put(grammarAccess.getAndConditionExprAccess().getGroup_1_0(), "rule__AndConditionExpr__Group_1_0__0");
					put(grammarAccess.getAndConditionExprAccess().getGroup_1_0_0(), "rule__AndConditionExpr__Group_1_0_0__0");
					put(grammarAccess.getVerificationMethodAccess().getGroup(), "rule__VerificationMethod__Group__0");
					put(grammarAccess.getVerificationMethodAccess().getGroup_2(), "rule__VerificationMethod__Group_2__0");
					put(grammarAccess.getVerificationMethodAccess().getGroup_6_0(), "rule__VerificationMethod__Group_6_0__0");
					put(grammarAccess.getVerificationMethodAccess().getGroup_6_1(), "rule__VerificationMethod__Group_6_1__0");
					put(grammarAccess.getReferencePathAccess().getGroup(), "rule__ReferencePath__Group__0");
					put(grammarAccess.getReferencePathAccess().getGroup_1(), "rule__ReferencePath__Group_1__0");
					put(grammarAccess.getPredicateExpressionAccess().getGroup(), "rule__PredicateExpression__Group__0");
					put(grammarAccess.getFinalValueAccess().getGroup(), "rule__FinalValue__Group__0");
					put(grammarAccess.getResultIssueAccess().getGroup(), "rule__ResultIssue__Group__0");
					put(grammarAccess.getMultiLineStringAccess().getGroup(), "rule__MultiLineString__Group__0");
					put(grammarAccess.getAadlClassifierReferenceAccess().getGroup(), "rule__AadlClassifierReference__Group__0");
					put(grammarAccess.getAadlClassifierReferenceAccess().getGroup_0(), "rule__AadlClassifierReference__Group_0__0");
					put(grammarAccess.getAadlClassifierReferenceAccess().getGroup_2(), "rule__AadlClassifierReference__Group_2__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getVerificationAccess().getContentsAssignment(), "rule__Verification__ContentsAssignment");
					put(grammarAccess.getVerificationPlanAccess().getNameAssignment_1(), "rule__VerificationPlan__NameAssignment_1");
					put(grammarAccess.getVerificationPlanAccess().getTargetAssignment_3(), "rule__VerificationPlan__TargetAssignment_3");
					put(grammarAccess.getVerificationPlanAccess().getDescriptionAssignment_5_1(), "rule__VerificationPlan__DescriptionAssignment_5_1");
					put(grammarAccess.getVerificationPlanAccess().getClaimsAssignment_6(), "rule__VerificationPlan__ClaimsAssignment_6");
					put(grammarAccess.getVerificationLibraryAccess().getNameAssignment_1(), "rule__VerificationLibrary__NameAssignment_1");
					put(grammarAccess.getVerificationLibraryAccess().getTargetAssignment_2_1(), "rule__VerificationLibrary__TargetAssignment_2_1");
					put(grammarAccess.getVerificationLibraryAccess().getContentAssignment_4(), "rule__VerificationLibrary__ContentAssignment_4");
					put(grammarAccess.getVerificationFolderAccess().getLabelAssignment_1(), "rule__VerificationFolder__LabelAssignment_1");
					put(grammarAccess.getVerificationFolderAccess().getTargetAssignment_2_1(), "rule__VerificationFolder__TargetAssignment_2_1");
					put(grammarAccess.getVerificationFolderAccess().getContentAssignment_4(), "rule__VerificationFolder__ContentAssignment_4");
					put(grammarAccess.getClaimAccess().getNameAssignment_1(), "rule__Claim__NameAssignment_1");
					put(grammarAccess.getClaimAccess().getRequirementAssignment_3(), "rule__Claim__RequirementAssignment_3");
					put(grammarAccess.getClaimAccess().getAssertAssignment_5(), "rule__Claim__AssertAssignment_5");
					put(grammarAccess.getClaimAccess().getRationaleAssignment_6_1(), "rule__Claim__RationaleAssignment_6_1");
					put(grammarAccess.getClaimAccess().getSubclaimsAssignment_7_1(), "rule__Claim__SubclaimsAssignment_7_1");
					put(grammarAccess.getVerificationActivityAccess().getNameAssignment_1(), "rule__VerificationActivity__NameAssignment_1");
					put(grammarAccess.getVerificationActivityAccess().getTargetAssignment_3(), "rule__VerificationActivity__TargetAssignment_3");
					put(grammarAccess.getVerificationActivityAccess().getTitleAssignment_5_0_1(), "rule__VerificationActivity__TitleAssignment_5_0_1");
					put(grammarAccess.getVerificationActivityAccess().getDescriptionAssignment_5_1_1(), "rule__VerificationActivity__DescriptionAssignment_5_1_1");
					put(grammarAccess.getVerificationActivityAccess().getCategoryAssignment_5_2_1(), "rule__VerificationActivity__CategoryAssignment_5_2_1");
					put(grammarAccess.getVerificationActivityAccess().getMethodAssignment_5_3_1(), "rule__VerificationActivity__MethodAssignment_5_3_1");
					put(grammarAccess.getVerificationConditionAccess().getNameAssignment_1(), "rule__VerificationCondition__NameAssignment_1");
					put(grammarAccess.getVerificationConditionAccess().getTitleAssignment_3_0_1(), "rule__VerificationCondition__TitleAssignment_3_0_1");
					put(grammarAccess.getVerificationConditionAccess().getDescriptionAssignment_3_1_1(), "rule__VerificationCondition__DescriptionAssignment_3_1_1");
					put(grammarAccess.getVerificationConditionAccess().getAssertAssignment_3_2_1(), "rule__VerificationCondition__AssertAssignment_3_2_1");
					put(grammarAccess.getVerificationConditionAccess().getMetByAssignment_3_3_2(), "rule__VerificationCondition__MetByAssignment_3_3_2");
					put(grammarAccess.getVerificationConditionAccess().getRationaleAssignment_3_4_1(), "rule__VerificationCondition__RationaleAssignment_3_4_1");
					put(grammarAccess.getVerificationConditionAccess().getIssueAssignment_3_5_1(), "rule__VerificationCondition__IssueAssignment_3_5_1");
					put(grammarAccess.getVerificationConditionAccess().getIssueAssignment_3_5_2_1(), "rule__VerificationCondition__IssueAssignment_3_5_2_1");
					put(grammarAccess.getAllEvidenceExprAccess().getAllAssignment_3(), "rule__AllEvidenceExpr__AllAssignment_3");
					put(grammarAccess.getAllEvidenceExprAccess().getAllAssignment_4_1(), "rule__AllEvidenceExpr__AllAssignment_4_1");
					put(grammarAccess.getAndThenEvidenceExprAccess().getOpAssignment_1_0_0_1(), "rule__AndThenEvidenceExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getAndThenEvidenceExprAccess().getRightAssignment_1_1(), "rule__AndThenEvidenceExpr__RightAssignment_1_1");
					put(grammarAccess.getFailThenEvidenceExprAccess().getOpAssignment_1_0_0_1(), "rule__FailThenEvidenceExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getFailThenEvidenceExprAccess().getRightAssignment_1_1(), "rule__FailThenEvidenceExpr__RightAssignment_1_1");
					put(grammarAccess.getConditionalEvidenceAccess().getOpAssignment_1_0_0_1(), "rule__ConditionalEvidence__OpAssignment_1_0_0_1");
					put(grammarAccess.getConditionalEvidenceAccess().getConditionAssignment_1_1(), "rule__ConditionalEvidence__ConditionAssignment_1_1");
					put(grammarAccess.getVAReferenceAccess().getVerificationAssignment_1(), "rule__VAReference__VerificationAssignment_1");
					put(grammarAccess.getVAReferenceAccess().getWeightAssignment_2_1(), "rule__VAReference__WeightAssignment_2_1");
					put(grammarAccess.getOrConditionExprAccess().getOpAssignment_1_0_0_1(), "rule__OrConditionExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getOrConditionExprAccess().getRightAssignment_1_1(), "rule__OrConditionExpr__RightAssignment_1_1");
					put(grammarAccess.getAndConditionExprAccess().getOpAssignment_1_0_0_1(), "rule__AndConditionExpr__OpAssignment_1_0_0_1");
					put(grammarAccess.getAndConditionExprAccess().getRightAssignment_1_1(), "rule__AndConditionExpr__RightAssignment_1_1");
					put(grammarAccess.getAtomicConditionExprAccess().getCatAssignment(), "rule__AtomicConditionExpr__CatAssignment");
					put(grammarAccess.getVerificationMethodAccess().getNameAssignment_1(), "rule__VerificationMethod__NameAssignment_1");
					put(grammarAccess.getVerificationMethodAccess().getTitleAssignment_2_1(), "rule__VerificationMethod__TitleAssignment_2_1");
					put(grammarAccess.getVerificationMethodAccess().getMethodTypeAssignment_4(), "rule__VerificationMethod__MethodTypeAssignment_4");
					put(grammarAccess.getVerificationMethodAccess().getMethodAssignment_5(), "rule__VerificationMethod__MethodAssignment_5");
					put(grammarAccess.getVerificationMethodAccess().getDescriptionAssignment_6_0_1(), "rule__VerificationMethod__DescriptionAssignment_6_0_1");
					put(grammarAccess.getVerificationMethodAccess().getCategoryAssignment_6_1_1(), "rule__VerificationMethod__CategoryAssignment_6_1_1");
					put(grammarAccess.getVerificationMethodAccess().getConditionsAssignment_6_2(), "rule__VerificationMethod__ConditionsAssignment_6_2");
					put(grammarAccess.getModelAccess().getContentAssignment(), "rule__Model__ContentAssignment");
					put(grammarAccess.getDescriptionAccess().getDescriptionAssignment(), "rule__Description__DescriptionAssignment");
					put(grammarAccess.getDescriptionElementAccess().getTextAssignment_0(), "rule__DescriptionElement__TextAssignment_0");
					put(grammarAccess.getDescriptionElementAccess().getRefAssignment_1(), "rule__DescriptionElement__RefAssignment_1");
					put(grammarAccess.getReferencePathAccess().getRefAssignment_0(), "rule__ReferencePath__RefAssignment_0");
					put(grammarAccess.getReferencePathAccess().getSubpathAssignment_1_1(), "rule__ReferencePath__SubpathAssignment_1_1");
					put(grammarAccess.getPredicateExpressionAccess().getOpAssignment_1(), "rule__PredicateExpression__OpAssignment_1");
					put(grammarAccess.getFinalValueAccess().getNameAssignment_0(), "rule__FinalValue__NameAssignment_0");
					put(grammarAccess.getFinalValueAccess().getValueAssignment_2(), "rule__FinalValue__ValueAssignment_2");
					put(grammarAccess.getResultIssueAccess().getTypeAssignment_0(), "rule__ResultIssue__TypeAssignment_0");
					put(grammarAccess.getResultIssueAccess().getMsgAssignment_1(), "rule__ResultIssue__MsgAssignment_1");
					put(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_5(), "rule__VerificationActivity__UnorderedGroup_5");
					put(grammarAccess.getVerificationConditionAccess().getUnorderedGroup_3(), "rule__VerificationCondition__UnorderedGroup_3");
					put(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), "rule__VerificationMethod__UnorderedGroup_6");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.osate.verify.ui.contentassist.antlr.internal.InternalVerifyParser typedParser = (org.osate.verify.ui.contentassist.antlr.internal.InternalVerifyParser) parser;
			typedParser.entryRuleVerification();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public VerifyGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(VerifyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
