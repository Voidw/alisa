/*
* generated by Xtext
*/
grammar InternalVerify;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.osate.verify.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.osate.verify.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.osate.verify.services.VerifyGrammarAccess;

}

@parser::members {
 
 	private VerifyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(VerifyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRSALContainer
entryRuleRSALContainer 
:
{ before(grammarAccess.getRSALContainerRule()); }
	 ruleRSALContainer
{ after(grammarAccess.getRSALContainerRule()); } 
	 EOF 
;

// Rule RSALContainer
ruleRSALContainer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRSALContainerAccess().getGroup()); }
(rule__RSALContainer__Group__0)
{ after(grammarAccess.getRSALContainerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity 
:
{ before(grammarAccess.getVerificationActivityRule()); }
	 ruleVerificationActivity
{ after(grammarAccess.getVerificationActivityRule()); } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup()); }
(rule__VerificationActivity__Group__0)
{ after(grammarAccess.getVerificationActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationAssumption
entryRuleVerificationAssumption 
:
{ before(grammarAccess.getVerificationAssumptionRule()); }
	 ruleVerificationAssumption
{ after(grammarAccess.getVerificationAssumptionRule()); } 
	 EOF 
;

// Rule VerificationAssumption
ruleVerificationAssumption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getGroup()); }
(rule__VerificationAssumption__Group__0)
{ after(grammarAccess.getVerificationAssumptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleArgumentExpr
entryRuleArgumentExpr 
:
{ before(grammarAccess.getArgumentExprRule()); }
	 ruleArgumentExpr
{ after(grammarAccess.getArgumentExprRule()); } 
	 EOF 
;

// Rule ArgumentExpr
ruleArgumentExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentExprAccess().getImpliesExprParserRuleCall()); }
	ruleImpliesExpr
{ after(grammarAccess.getArgumentExprAccess().getImpliesExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImpliesExpr
entryRuleImpliesExpr 
:
{ before(grammarAccess.getImpliesExprRule()); }
	 ruleImpliesExpr
{ after(grammarAccess.getImpliesExprRule()); } 
	 EOF 
;

// Rule ImpliesExpr
ruleImpliesExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup()); }
(rule__ImpliesExpr__Group__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpr
entryRuleAtomicExpr 
:
{ before(grammarAccess.getAtomicExprRule()); }
	 ruleAtomicExpr
{ after(grammarAccess.getAtomicExprRule()); } 
	 EOF 
;

// Rule AtomicExpr
ruleAtomicExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExprAccess().getAlternatives()); }
(rule__AtomicExpr__Alternatives)
{ after(grammarAccess.getAtomicExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentReference
entryRuleArgumentReference 
:
{ before(grammarAccess.getArgumentReferenceRule()); }
	 ruleArgumentReference
{ after(grammarAccess.getArgumentReferenceRule()); } 
	 EOF 
;

// Rule ArgumentReference
ruleArgumentReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentReferenceAccess().getGroup()); }
(rule__ArgumentReference__Group__0)
{ after(grammarAccess.getArgumentReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod 
:
{ before(grammarAccess.getVerificationMethodRule()); }
	 ruleVerificationMethod
{ after(grammarAccess.getVerificationMethodRule()); } 
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVerificationMethodAccess().getGroup()); }
(rule__VerificationMethod__Group__0)
{ after(grammarAccess.getVerificationMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSupportedLanguage
entryRuleSupportedLanguage 
:
{ before(grammarAccess.getSupportedLanguageRule()); }
	 ruleSupportedLanguage
{ after(grammarAccess.getSupportedLanguageRule()); } 
	 EOF 
;

// Rule SupportedLanguage
ruleSupportedLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSupportedLanguageAccess().getAlternatives()); }
(rule__SupportedLanguage__Alternatives)
{ after(grammarAccess.getSupportedLanguageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueString
entryRuleValueString 
:
{ before(grammarAccess.getValueStringRule()); }
	 ruleValueString
{ after(grammarAccess.getValueStringRule()); } 
	 EOF 
;

// Rule ValueString
ruleValueString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDescription
entryRuleDescription 
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
(rule__Description__DescriptionAssignment)
{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
)
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
(rule__Description__DescriptionAssignment)*
{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescriptionElement
entryRuleDescriptionElement 
:
{ before(grammarAccess.getDescriptionElementRule()); }
	 ruleDescriptionElement
{ after(grammarAccess.getDescriptionElementRule()); } 
	 EOF 
;

// Rule DescriptionElement
ruleDescriptionElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionElementAccess().getAlternatives()); }
(rule__DescriptionElement__Alternatives)
{ after(grammarAccess.getDescriptionElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferencePath
entryRuleReferencePath 
:
{ before(grammarAccess.getReferencePathRule()); }
	 ruleReferencePath
{ after(grammarAccess.getReferencePathRule()); } 
	 EOF 
;

// Rule ReferencePath
ruleReferencePath
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferencePathAccess().getGroup()); }
(rule__ReferencePath__Group__0)
{ after(grammarAccess.getReferencePathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDOTTEDREF
entryRuleDOTTEDREF 
:
{ before(grammarAccess.getDOTTEDREFRule()); }
	 ruleDOTTEDREF
{ after(grammarAccess.getDOTTEDREFRule()); } 
	 EOF 
;

// Rule DOTTEDREF
ruleDOTTEDREF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDOTTEDREFAccess().getGroup()); }
(rule__DOTTEDREF__Group__0)
{ after(grammarAccess.getDOTTEDREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCATREF
entryRuleCATREF 
:
{ before(grammarAccess.getCATREFRule()); }
	 ruleCATREF
{ after(grammarAccess.getCATREFRule()); } 
	 EOF 
;

// Rule CATREF
ruleCATREF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCATREFAccess().getGroup()); }
(rule__CATREF__Group__0)
{ after(grammarAccess.getCATREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__RSALContainer__ContentAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getContentVerificationActivityParserRuleCall_4_0_0()); }
	ruleVerificationActivity
{ after(grammarAccess.getRSALContainerAccess().getContentVerificationActivityParserRuleCall_4_0_0()); }
)

    |(
{ before(grammarAccess.getRSALContainerAccess().getContentVerificationMethodParserRuleCall_4_0_1()); }
	ruleVerificationMethod
{ after(grammarAccess.getRSALContainerAccess().getContentVerificationMethodParserRuleCall_4_0_1()); }
)

    |(
{ before(grammarAccess.getRSALContainerAccess().getContentRSALContainerParserRuleCall_4_0_2()); }
	ruleRSALContainer
{ after(grammarAccess.getRSALContainerAccess().getContentRSALContainerParserRuleCall_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getGroup_0()); }
(rule__AtomicExpr__Group_0__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicExprAccess().getGroup_1()); }
(rule__AtomicExpr__Group_1__0)
{ after(grammarAccess.getAtomicExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SupportedLanguage__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSupportedLanguageAccess().getLuteKeyword_0()); }

	'lute' 

{ after(grammarAccess.getSupportedLanguageAccess().getLuteKeyword_0()); }
)

    |(
{ before(grammarAccess.getSupportedLanguageAccess().getAgreeKeyword_1()); }

	'agree' 

{ after(grammarAccess.getSupportedLanguageAccess().getAgreeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getTextAssignment_0()); }
(rule__DescriptionElement__TextAssignment_0)
{ after(grammarAccess.getDescriptionElementAccess().getTextAssignment_0()); }
)

    |(
{ before(grammarAccess.getDescriptionElementAccess().getRefAssignment_1()); }
(rule__DescriptionElement__RefAssignment_1)
{ after(grammarAccess.getDescriptionElementAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RSALContainer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__0__Impl
	rule__RSALContainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getContainerKeyword_0()); }

	'container' 

{ after(grammarAccess.getRSALContainerAccess().getContainerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__1__Impl
	rule__RSALContainer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getNameAssignment_1()); }
(rule__RSALContainer__NameAssignment_1)
{ after(grammarAccess.getRSALContainerAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__2__Impl
	rule__RSALContainer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getGroup_2()); }
(rule__RSALContainer__Group_2__0)?
{ after(grammarAccess.getRSALContainerAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__3__Impl
	rule__RSALContainer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getRSALContainerAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__4__Impl
	rule__RSALContainer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getContentAssignment_4()); }
(rule__RSALContainer__ContentAssignment_4)*
{ after(grammarAccess.getRSALContainerAccess().getContentAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getRSALContainerAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RSALContainer__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group_2__0__Impl
	rule__RSALContainer__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getRSALContainerAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RSALContainer__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RSALContainer__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getTargetAssignment_2_1()); }
(rule__RSALContainer__TargetAssignment_2_1)
{ after(grammarAccess.getRSALContainerAccess().getTargetAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__0__Impl
	rule__VerificationActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0()); }

	'verification' 

{ after(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__1__Impl
	rule__VerificationActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getActivityKeyword_1()); }

	'activity' 

{ after(grammarAccess.getVerificationActivityAccess().getActivityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__2__Impl
	rule__VerificationActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getNameAssignment_2()); }
(rule__VerificationActivity__NameAssignment_2)
{ after(grammarAccess.getVerificationActivityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__3__Impl
	rule__VerificationActivity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getVerificationActivityAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__4__Impl
	rule__VerificationActivity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4()); }
(rule__VerificationActivity__UnorderedGroup_4)
{ after(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getVerificationActivityAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VerificationActivity__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_0__0__Impl
	rule__VerificationActivity__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleKeyword_4_0_0()); }

	'title' 

{ after(grammarAccess.getVerificationActivityAccess().getTitleKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleAssignment_4_0_1()); }
(rule__VerificationActivity__TitleAssignment_4_0_1)
{ after(grammarAccess.getVerificationActivityAccess().getTitleAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationActivity__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_1__0__Impl
	rule__VerificationActivity__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_1_0()); }

	'description' 

{ after(grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionAssignment_4_1_1()); }
(rule__VerificationActivity__DescriptionAssignment_4_1_1)
{ after(grammarAccess.getVerificationActivityAccess().getDescriptionAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationActivity__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_2__0__Impl
	rule__VerificationActivity__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getCategoryKeyword_4_2_0()); }

	'category' 

{ after(grammarAccess.getVerificationActivityAccess().getCategoryKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getCategoryAssignment_4_2_1()); }
(rule__VerificationActivity__CategoryAssignment_4_2_1)
{ after(grammarAccess.getVerificationActivityAccess().getCategoryAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationActivity__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_3__0__Impl
	rule__VerificationActivity__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodKeyword_4_3_0()); }

	'method' 

{ after(grammarAccess.getVerificationActivityAccess().getMethodKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodAssignment_4_3_1()); }
(rule__VerificationActivity__MethodAssignment_4_3_1)
{ after(grammarAccess.getVerificationActivityAccess().getMethodAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationAssumption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__0__Impl
	rule__VerificationAssumption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getVerificationKeyword_0()); }

	'verification' 

{ after(grammarAccess.getVerificationAssumptionAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__1__Impl
	rule__VerificationAssumption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getAssumptionKeyword_1()); }

	'assumption' 

{ after(grammarAccess.getVerificationAssumptionAccess().getAssumptionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__2__Impl
	rule__VerificationAssumption__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getNameAssignment_2()); }
(rule__VerificationAssumption__NameAssignment_2)
{ after(grammarAccess.getVerificationAssumptionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__3__Impl
	rule__VerificationAssumption__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getLeftSquareBracketKeyword_3()); }

	'[' 

{ after(grammarAccess.getVerificationAssumptionAccess().getLeftSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__4__Impl
	rule__VerificationAssumption__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4()); }
(rule__VerificationAssumption__UnorderedGroup_4)
{ after(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getRightSquareBracketKeyword_5()); }

	']' 

{ after(grammarAccess.getVerificationAssumptionAccess().getRightSquareBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VerificationAssumption__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_0__0__Impl
	rule__VerificationAssumption__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getTitleKeyword_4_0_0()); }

	'title' 

{ after(grammarAccess.getVerificationAssumptionAccess().getTitleKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getTitleAssignment_4_0_1()); }
(rule__VerificationAssumption__TitleAssignment_4_0_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getTitleAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationAssumption__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_1__0__Impl
	rule__VerificationAssumption__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getDescriptionKeyword_4_1_0()); }

	'description' 

{ after(grammarAccess.getVerificationAssumptionAccess().getDescriptionKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getDescriptionAssignment_4_1_1()); }
(rule__VerificationAssumption__DescriptionAssignment_4_1_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getDescriptionAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationAssumption__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_2__0__Impl
	rule__VerificationAssumption__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getAssertedKeyword_4_2_0()); }

	'asserted' 

{ after(grammarAccess.getVerificationAssumptionAccess().getAssertedKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_2__1__Impl
	rule__VerificationAssumption__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getByKeyword_4_2_1()); }

	'by' 

{ after(grammarAccess.getVerificationAssumptionAccess().getByKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getAssertAssignment_4_2_2()); }
(rule__VerificationAssumption__AssertAssignment_4_2_2)
{ after(grammarAccess.getVerificationAssumptionAccess().getAssertAssignment_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationAssumption__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_3__0__Impl
	rule__VerificationAssumption__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getVerifiedByKeyword_4_3_0()); }

	'verified by' 

{ after(grammarAccess.getVerificationAssumptionAccess().getVerifiedByKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssignment_4_3_1()); }
(rule__VerificationAssumption__VerifiedByAssignment_4_3_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationAssumption__Group_4_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_4__0__Impl
	rule__VerificationAssumption__Group_4_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getRationaleKeyword_4_4_0()); }

	'rationale' 

{ after(grammarAccess.getVerificationAssumptionAccess().getRationaleKeyword_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getRationaleAssignment_4_4_1()); }
(rule__VerificationAssumption__RationaleAssignment_4_4_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getRationaleAssignment_4_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationAssumption__Group_4_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_5__0__Impl
	rule__VerificationAssumption__Group_4_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getIssuesKeyword_4_5_0()); }

	'issues' 

{ after(grammarAccess.getVerificationAssumptionAccess().getIssuesKeyword_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_5__1__Impl
	rule__VerificationAssumption__Group_4_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getIssueAssignment_4_5_1()); }
(rule__VerificationAssumption__IssueAssignment_4_5_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getIssueAssignment_4_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_5_2()); }
(rule__VerificationAssumption__Group_4_5_2__0)*
{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationAssumption__Group_4_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_5_2__0__Impl
	rule__VerificationAssumption__Group_4_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getCommaKeyword_4_5_2_0()); }

	',' 

{ after(grammarAccess.getVerificationAssumptionAccess().getCommaKeyword_4_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__Group_4_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__Group_4_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__Group_4_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getIssueAssignment_4_5_2_1()); }
(rule__VerificationAssumption__IssueAssignment_4_5_2_1)
{ after(grammarAccess.getVerificationAssumptionAccess().getIssueAssignment_4_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImpliesExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__0__Impl
	rule__ImpliesExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getImpliesExprAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1()); }
(rule__ImpliesExpr__Group_1__0)?
{ after(grammarAccess.getImpliesExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__0__Impl
	rule__ImpliesExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
(rule__ImpliesExpr__Group_1_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
(rule__ImpliesExpr__RightAssignment_1_1)
{ after(grammarAccess.getImpliesExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
(rule__ImpliesExpr__Group_1_0_0__0)
{ after(grammarAccess.getImpliesExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImpliesExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__0__Impl
	rule__ImpliesExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getImpliesExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
(rule__ImpliesExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getImpliesExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)*
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0()); }
(rule__OrExpr__Group_1_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
(rule__OrExpr__RightAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
(rule__OrExpr__Group_1_0_0__0)
{ after(grammarAccess.getOrExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OrExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__0__Impl
	rule__OrExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
(rule__OrExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getAtomicExprParserRuleCall_0()); }
	ruleAtomicExpr
{ after(grammarAccess.getAndExprAccess().getAtomicExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)*
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0()); }
(rule__AndExpr__Group_1_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
(rule__AndExpr__RightAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
(rule__AndExpr__Group_1_0_0__0)
{ after(grammarAccess.getAndExprAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AndExpr__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__0__Impl
	rule__AndExpr__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getBinaryExprLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1()); }
(rule__AndExpr__OpAssignment_1_0_0_1)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_0__0__Impl
	rule__AtomicExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRefExprAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicExprAccess().getRefExprAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIdAssignment_0_1()); }
(rule__AtomicExpr__IdAssignment_0_1)
{ after(grammarAccess.getAtomicExprAccess().getIdAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__0__Impl
	rule__AtomicExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getAtomicExprAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__1__Impl
	rule__AtomicExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getArgumentExprParserRuleCall_1_1()); }
	ruleArgumentExpr
{ after(grammarAccess.getAtomicExprAccess().getArgumentExprParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getAtomicExprAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArgumentReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentReference__Group__0__Impl
	rule__ArgumentReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getReferenceAssignment_0()); }
(rule__ArgumentReference__ReferenceAssignment_0)
{ after(grammarAccess.getArgumentReferenceAccess().getReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getGroup_1()); }
(rule__ArgumentReference__Group_1__0)?
{ after(grammarAccess.getArgumentReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArgumentReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentReference__Group_1__0__Impl
	rule__ArgumentReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getAsteriskKeyword_1_0()); }

	'*' 

{ after(grammarAccess.getArgumentReferenceAccess().getAsteriskKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArgumentReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getWeightAssignment_1_1()); }
(rule__ArgumentReference__WeightAssignment_1_1)
{ after(grammarAccess.getArgumentReferenceAccess().getWeightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__0__Impl
	rule__VerificationMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getVerificationKeyword_0()); }

	'verification' 

{ after(grammarAccess.getVerificationMethodAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__1__Impl
	rule__VerificationMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getMethodKeyword_1()); }

	'method' 

{ after(grammarAccess.getVerificationMethodAccess().getMethodKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__2__Impl
	rule__VerificationMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getNameAssignment_2()); }
(rule__VerificationMethod__NameAssignment_2)
{ after(grammarAccess.getVerificationMethodAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__3__Impl
	rule__VerificationMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getVerificationMethodAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__4__Impl
	rule__VerificationMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getLanguageAssignment_4()); }
(rule__VerificationMethod__LanguageAssignment_4)
{ after(grammarAccess.getVerificationMethodAccess().getLanguageAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__5__Impl
	rule__VerificationMethod__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getMethodAssignment_5()); }
(rule__VerificationMethod__MethodAssignment_5)
{ after(grammarAccess.getVerificationMethodAccess().getMethodAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6()); }
(rule__VerificationMethod__UnorderedGroup_6)
{ after(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__VerificationMethod__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_0__0__Impl
	rule__VerificationMethod__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getTitleKeyword_6_0_0()); }

	'title' 

{ after(grammarAccess.getVerificationMethodAccess().getTitleKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getTitleAssignment_6_0_1()); }
(rule__VerificationMethod__TitleAssignment_6_0_1)
{ after(grammarAccess.getVerificationMethodAccess().getTitleAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationMethod__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_1__0__Impl
	rule__VerificationMethod__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getDescriptionKeyword_6_1_0()); }

	'description' 

{ after(grammarAccess.getVerificationMethodAccess().getDescriptionKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getDescriptionAssignment_6_1_1()); }
(rule__VerificationMethod__DescriptionAssignment_6_1_1)
{ after(grammarAccess.getVerificationMethodAccess().getDescriptionAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VerificationMethod__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_2__0__Impl
	rule__VerificationMethod__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getCategoryKeyword_6_2_0()); }

	'category' 

{ after(grammarAccess.getVerificationMethodAccess().getCategoryKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getCategoryAssignment_6_2_1()); }
(rule__VerificationMethod__CategoryAssignment_6_2_1)
{ after(grammarAccess.getVerificationMethodAccess().getCategoryAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferencePath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group__0__Impl
	rule__ReferencePath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getRefAssignment_0()); }
(rule__ReferencePath__RefAssignment_0)
{ after(grammarAccess.getReferencePathAccess().getRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getGroup_1()); }
(rule__ReferencePath__Group_1__0)
{ after(grammarAccess.getReferencePathAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferencePath__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group_1__0__Impl
	rule__ReferencePath__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getReferencePathAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencePath__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencePath__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getSubpathAssignment_1_1()); }
(rule__ReferencePath__SubpathAssignment_1_1)
{ after(grammarAccess.getReferencePathAccess().getSubpathAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOTTEDREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOTTEDREF__Group__0__Impl
	rule__DOTTEDREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOTTEDREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOTTEDREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getDOTTEDREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOTTEDREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOTTEDREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOTTEDREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOTTEDREFAccess().getGroup_1()); }
(rule__DOTTEDREF__Group_1__0)*
{ after(grammarAccess.getDOTTEDREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DOTTEDREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOTTEDREF__Group_1__0__Impl
	rule__DOTTEDREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DOTTEDREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOTTEDREFAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getDOTTEDREFAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DOTTEDREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DOTTEDREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DOTTEDREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDOTTEDREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getDOTTEDREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__CATREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group__0__Impl
	rule__CATREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CATREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group__1__Impl
	rule__CATREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getCATREFAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CATREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CATREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CATREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getCATREFAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__VerificationActivity__UnorderedGroup_4
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4());
    }
:
	rule__VerificationActivity__UnorderedGroup_4__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationActivityAccess().getGroup_4_0()); }
						(rule__VerificationActivity__Group_4_0__0)
						{ after(grammarAccess.getVerificationActivityAccess().getGroup_4_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationActivityAccess().getGroup_4_1()); }
						(rule__VerificationActivity__Group_4_1__0)
						{ after(grammarAccess.getVerificationActivityAccess().getGroup_4_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationActivityAccess().getGroup_4_2()); }
						(rule__VerificationActivity__Group_4_2__0)
						{ after(grammarAccess.getVerificationActivityAccess().getGroup_4_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationActivityAccess().getGroup_4_3()); }
						(rule__VerificationActivity__Group_4_3__0)
						{ after(grammarAccess.getVerificationActivityAccess().getGroup_4_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					(
						{ before(grammarAccess.getVerificationActivityAccess().getAssumptionAssignment_4_4()); }
						(rule__VerificationActivity__AssumptionAssignment_4_4)
						{ after(grammarAccess.getVerificationActivityAccess().getAssumptionAssignment_4_4()); }
					)
					(
						{ before(grammarAccess.getVerificationActivityAccess().getAssumptionAssignment_4_4()); }
						((rule__VerificationActivity__AssumptionAssignment_4_4)=>rule__VerificationActivity__AssumptionAssignment_4_4)*
						{ after(grammarAccess.getVerificationActivityAccess().getAssumptionAssignment_4_4()); }
					)					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationActivityAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__UnorderedGroup_4__Impl
	rule__VerificationActivity__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__UnorderedGroup_4__Impl
	rule__VerificationActivity__UnorderedGroup_4__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__UnorderedGroup_4__Impl
	rule__VerificationActivity__UnorderedGroup_4__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__UnorderedGroup_4__Impl
	rule__VerificationActivity__UnorderedGroup_4__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__UnorderedGroup_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}












rule__VerificationAssumption__UnorderedGroup_4
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4());
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_0()); }
						(rule__VerificationAssumption__Group_4_0__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_1()); }
						(rule__VerificationAssumption__Group_4_1__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_2()); }
						(rule__VerificationAssumption__Group_4_2__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_3()); }
						(rule__VerificationAssumption__Group_4_3__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_4()); }
						(rule__VerificationAssumption__Group_4_4__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_4()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationAssumptionAccess().getGroup_4_5()); }
						(rule__VerificationAssumption__Group_4_5__0)
						{ after(grammarAccess.getVerificationAssumptionAccess().getGroup_4_5()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationAssumptionAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
	rule__VerificationAssumption__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
	rule__VerificationAssumption__UnorderedGroup_4__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
	rule__VerificationAssumption__UnorderedGroup_4__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
	rule__VerificationAssumption__UnorderedGroup_4__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
	rule__VerificationAssumption__UnorderedGroup_4__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationAssumption__UnorderedGroup_4__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationAssumption__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}














rule__VerificationMethod__UnorderedGroup_6
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
    }
:
	rule__VerificationMethod__UnorderedGroup_6__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	restoreStackSize(stackSize);
}


rule__VerificationMethod__UnorderedGroup_6__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationMethodAccess().getGroup_6_0()); }
						(rule__VerificationMethod__Group_6_0__0)
						{ after(grammarAccess.getVerificationMethodAccess().getGroup_6_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationMethodAccess().getGroup_6_1()); }
						(rule__VerificationMethod__Group_6_1__0)
						{ after(grammarAccess.getVerificationMethodAccess().getGroup_6_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getVerificationMethodAccess().getGroup_6_2()); }
						(rule__VerificationMethod__Group_6_2__0)
						{ after(grammarAccess.getVerificationMethodAccess().getGroup_6_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getVerificationMethodAccess().getUnorderedGroup_6());
	restoreStackSize(stackSize);
}


rule__VerificationMethod__UnorderedGroup_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__UnorderedGroup_6__Impl
	rule__VerificationMethod__UnorderedGroup_6__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__UnorderedGroup_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__UnorderedGroup_6__Impl
	rule__VerificationMethod__UnorderedGroup_6__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationMethod__UnorderedGroup_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationMethod__UnorderedGroup_6__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__RSALContainer__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRSALContainerAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__TargetAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getTargetRequirementCrossReference_2_1_0()); }
(
{ before(grammarAccess.getRSALContainerAccess().getTargetRequirementDOTTEDREFParserRuleCall_2_1_0_1()); }
	ruleDOTTEDREF{ after(grammarAccess.getRSALContainerAccess().getTargetRequirementDOTTEDREFParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getRSALContainerAccess().getTargetRequirementCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RSALContainer__ContentAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRSALContainerAccess().getContentAlternatives_4_0()); }
(rule__RSALContainer__ContentAlternatives_4_0)
{ after(grammarAccess.getRSALContainerAccess().getContentAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__TitleAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_4_0_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__DescriptionAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_1_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__CategoryAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getCategoryVerificationCategoryCrossReference_4_2_1_0()); }
(
{ before(grammarAccess.getVerificationActivityAccess().getCategoryVerificationCategoryDOTTEDREFParserRuleCall_4_2_1_0_1()); }
	ruleDOTTEDREF{ after(grammarAccess.getVerificationActivityAccess().getCategoryVerificationCategoryDOTTEDREFParserRuleCall_4_2_1_0_1()); }
)
{ after(grammarAccess.getVerificationActivityAccess().getCategoryVerificationCategoryCrossReference_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__MethodAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_4_3_1_0()); }
	ruleVerificationMethod{ after(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__AssumptionAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getAssumptionVerificationAssumptionParserRuleCall_4_4_0()); }
	ruleVerificationAssumption{ after(grammarAccess.getVerificationActivityAccess().getAssumptionVerificationAssumptionParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationAssumptionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__TitleAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getTitleValueStringParserRuleCall_4_0_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationAssumptionAccess().getTitleValueStringParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__DescriptionAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getDescriptionDescriptionParserRuleCall_4_1_1_0()); }
	ruleDescription{ after(grammarAccess.getVerificationAssumptionAccess().getDescriptionDescriptionParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__AssertAssignment_4_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getAssertRequirementCrossReference_4_2_2_0()); }
(
{ before(grammarAccess.getVerificationAssumptionAccess().getAssertRequirementDOTTEDREFParserRuleCall_4_2_2_0_1()); }
	ruleDOTTEDREF{ after(grammarAccess.getVerificationAssumptionAccess().getAssertRequirementDOTTEDREFParserRuleCall_4_2_2_0_1()); }
)
{ after(grammarAccess.getVerificationAssumptionAccess().getAssertRequirementCrossReference_4_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__VerifiedByAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssurancePlanCrossReference_4_3_1_0()); }
(
{ before(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssurancePlanDOTTEDREFParserRuleCall_4_3_1_0_1()); }
	ruleDOTTEDREF{ after(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssurancePlanDOTTEDREFParserRuleCall_4_3_1_0_1()); }
)
{ after(grammarAccess.getVerificationAssumptionAccess().getVerifiedByAssurancePlanCrossReference_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__RationaleAssignment_4_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getRationaleValueStringParserRuleCall_4_4_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationAssumptionAccess().getRationaleValueStringParserRuleCall_4_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__IssueAssignment_4_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getIssueValueStringParserRuleCall_4_5_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationAssumptionAccess().getIssueValueStringParserRuleCall_4_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationAssumption__IssueAssignment_4_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationAssumptionAccess().getIssueValueStringParserRuleCall_4_5_2_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationAssumptionAccess().getIssueValueStringParserRuleCall_4_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ImpliesExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }

	'=>' 

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getImpliesExprAccess().getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
	ruleImpliesExpr{ after(grammarAccess.getImpliesExprAccess().getRightImpliesExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }

	'or' 

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getOrExprAccess().getOpOrKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
(
{ before(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }

	'and' 

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
)

{ after(grammarAccess.getAndExprAccess().getOpAndKeyword_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAtomicExprParserRuleCall_1_1_0()); }
	ruleAtomicExpr{ after(grammarAccess.getAndExprAccess().getRightAtomicExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpr__IdAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExprAccess().getIdArgumentReferenceParserRuleCall_0_1_0()); }
	ruleArgumentReference{ after(grammarAccess.getAtomicExprAccess().getIdArgumentReferenceParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__ReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getReferenceVerificationActivityCrossReference_0_0()); }
(
{ before(grammarAccess.getArgumentReferenceAccess().getReferenceVerificationActivityDOTTEDREFParserRuleCall_0_0_1()); }
	ruleDOTTEDREF{ after(grammarAccess.getArgumentReferenceAccess().getReferenceVerificationActivityDOTTEDREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getArgumentReferenceAccess().getReferenceVerificationActivityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentReference__WeightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentReferenceAccess().getWeightINTTerminalRuleCall_1_1_0()); }
	RULE_INT{ after(grammarAccess.getArgumentReferenceAccess().getWeightINTTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationMethodAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__LanguageAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getLanguageSupportedLanguageParserRuleCall_4_0()); }
	ruleSupportedLanguage{ after(grammarAccess.getVerificationMethodAccess().getLanguageSupportedLanguageParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__MethodAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getMethodValueStringParserRuleCall_5_0()); }
	ruleValueString{ after(grammarAccess.getVerificationMethodAccess().getMethodValueStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__TitleAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getTitleValueStringParserRuleCall_6_0_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationMethodAccess().getTitleValueStringParserRuleCall_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__DescriptionAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getDescriptionValueStringParserRuleCall_6_1_1_0()); }
	ruleValueString{ after(grammarAccess.getVerificationMethodAccess().getDescriptionValueStringParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__CategoryAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getCategoryVerificationCategoryCrossReference_6_2_1_0()); }
(
{ before(grammarAccess.getVerificationMethodAccess().getCategoryVerificationCategoryCATREFParserRuleCall_6_2_1_0_1()); }
	ruleCATREF{ after(grammarAccess.getVerificationMethodAccess().getCategoryVerificationCategoryCATREFParserRuleCall_6_2_1_0_1()); }
)
{ after(grammarAccess.getVerificationMethodAccess().getCategoryVerificationCategoryCrossReference_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__DescriptionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); }
	ruleDescriptionElement{ after(grammarAccess.getDescriptionAccess().getDescriptionDescriptionElementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__TextAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getDescriptionElementAccess().getTextSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionElement__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionElementAccess().getRefEObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getDescriptionElementAccess().getRefEObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDescriptionElementAccess().getRefEObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDescriptionElementAccess().getRefEObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__RefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getReferencePathAccess().getRefEObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReferencePathAccess().getRefEObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferencePathAccess().getRefEObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencePath__SubpathAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); }
	ruleReferencePath{ after(grammarAccess.getReferencePathAccess().getSubpathReferencePathParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


